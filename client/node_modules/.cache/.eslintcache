[{"C:\\Users\\ericg\\OneDrive\\Bureau\\Pro\\Code\\Projet-2-SpotCast\\2023-02-js-btz-spotcast\\client\\src\\index.js":"1","C:\\Users\\ericg\\OneDrive\\Bureau\\Pro\\Code\\Projet-2-SpotCast\\2023-02-js-btz-spotcast\\client\\src\\App.js":"2","C:\\Users\\ericg\\OneDrive\\Bureau\\Pro\\Code\\Projet-2-SpotCast\\2023-02-js-btz-spotcast\\client\\src\\pages\\Dashboard.jsx":"3","C:\\Users\\ericg\\OneDrive\\Bureau\\Pro\\Code\\Projet-2-SpotCast\\2023-02-js-btz-spotcast\\client\\src\\components\\forecast-cards\\ForecastCardBackground.jsx":"4","C:\\Users\\ericg\\OneDrive\\Bureau\\Pro\\Code\\Projet-2-SpotCast\\2023-02-js-btz-spotcast\\client\\src\\components\\widgets\\wind\\Wind.jsx":"5","C:\\Users\\ericg\\OneDrive\\Bureau\\Pro\\Code\\Projet-2-SpotCast\\2023-02-js-btz-spotcast\\client\\src\\components\\widgets\\meteo-day\\MeteoDay.jsx":"6","C:\\Users\\ericg\\OneDrive\\Bureau\\Pro\\Code\\Projet-2-SpotCast\\2023-02-js-btz-spotcast\\client\\src\\components\\widgets\\navbar\\NavBar.jsx":"7","C:\\Users\\ericg\\OneDrive\\Bureau\\Pro\\Code\\Projet-2-SpotCast\\2023-02-js-btz-spotcast\\client\\src\\components\\widgets\\meteo-three-day\\MeteoThreeDay.jsx":"8","C:\\Users\\ericg\\OneDrive\\Bureau\\Pro\\Code\\Projet-2-SpotCast\\2023-02-js-btz-spotcast\\client\\src\\components\\widgets\\sunset\\Sunset.jsx":"9","C:\\Users\\ericg\\OneDrive\\Bureau\\Pro\\Code\\Projet-2-SpotCast\\2023-02-js-btz-spotcast\\client\\src\\components\\widgets\\tide\\Tide.jsx":"10","C:\\Users\\ericg\\OneDrive\\Bureau\\Pro\\Code\\Projet-2-SpotCast\\2023-02-js-btz-spotcast\\client\\src\\components\\widgets\\login\\Register.jsx":"11","C:\\Users\\ericg\\OneDrive\\Bureau\\Pro\\Code\\Projet-2-SpotCast\\2023-02-js-btz-spotcast\\client\\src\\components\\widgets\\login\\Login.jsx":"12","C:\\Users\\ericg\\OneDrive\\Bureau\\Pro\\Code\\Projet-2-SpotCast\\2023-02-js-btz-spotcast\\client\\src\\components\\utilities\\TideDatas.jsx":"13","C:\\Users\\ericg\\OneDrive\\Bureau\\Pro\\Code\\Projet-2-SpotCast\\2023-02-js-btz-spotcast\\client\\src\\components\\utilities\\ToggleButton.jsx":"14","C:\\Users\\ericg\\OneDrive\\Bureau\\Pro\\Code\\Projet-2-SpotCast\\2023-02-js-btz-spotcast\\client\\src\\components\\forecast-cards\\forecast-card-extended\\ForecastCardExtended.jsx":"15","C:\\Users\\ericg\\OneDrive\\Bureau\\Pro\\Code\\Projet-2-SpotCast\\2023-02-js-btz-spotcast\\client\\src\\components\\utilities\\UsersDataBase.jsx":"16","C:\\Users\\ericg\\OneDrive\\Bureau\\Pro\\Code\\Projet-2-SpotCast\\2023-02-js-btz-spotcast\\client\\src\\components\\forecast-cards\\forecast-card-minified\\ForecastCardMinified.jsx":"17","C:\\Users\\ericg\\OneDrive\\Bureau\\Pro\\Code\\Projet-2-SpotCast\\2023-02-js-btz-spotcast\\client\\src\\components\\widgets\\navbar\\searchbar\\SearchBar.jsx":"18","C:\\Users\\ericg\\OneDrive\\Bureau\\Pro\\Code\\Projet-2-SpotCast\\2023-02-js-btz-spotcast\\client\\src\\components\\forecast-cards\\forecast-card-extended\\forecast-extended-components\\DailyTide.jsx":"19","C:\\Users\\ericg\\OneDrive\\Bureau\\Pro\\Code\\Projet-2-SpotCast\\2023-02-js-btz-spotcast\\client\\src\\components\\widgets\\meteo-three-day\\components\\IconMeteoThreeDays.jsx":"20","C:\\Users\\ericg\\OneDrive\\Bureau\\Pro\\Code\\Projet-2-SpotCast\\2023-02-js-btz-spotcast\\client\\src\\components\\widgets\\meteo-three-day\\components\\TempThreeDays.jsx":"21","C:\\Users\\ericg\\OneDrive\\Bureau\\Pro\\Code\\Projet-2-SpotCast\\2023-02-js-btz-spotcast\\client\\src\\components\\widgets\\meteo-three-day\\components\\DateThreeDays.jsx":"22","C:\\Users\\ericg\\OneDrive\\Bureau\\Pro\\Code\\Projet-2-SpotCast\\2023-02-js-btz-spotcast\\client\\src\\components\\forecast-cards\\forecast-card-extended\\forecast-extended-components\\HourlyForecast.jsx":"23","C:\\Users\\ericg\\OneDrive\\Bureau\\Pro\\Code\\Projet-2-SpotCast\\2023-02-js-btz-spotcast\\client\\src\\components\\utilities\\SpotDataBase.jsx":"24","C:\\Users\\ericg\\OneDrive\\Bureau\\Pro\\Code\\Projet-2-SpotCast\\2023-02-js-btz-spotcast\\client\\src\\components\\forecast-cards\\forecast-card-minified\\minified-components\\Wind-Minified.jsx":"25","C:\\Users\\ericg\\OneDrive\\Bureau\\Pro\\Code\\Projet-2-SpotCast\\2023-02-js-btz-spotcast\\client\\src\\components\\forecast-cards\\forecast-card-minified\\minified-components\\PeriodeMinified.jsx":"26","C:\\Users\\ericg\\OneDrive\\Bureau\\Pro\\Code\\Projet-2-SpotCast\\2023-02-js-btz-spotcast\\client\\src\\components\\forecast-cards\\forecast-card-minified\\minified-components\\Swell.jsx":"27","C:\\Users\\ericg\\OneDrive\\Bureau\\Pro\\Code\\Projet-2-SpotCast\\2023-02-js-btz-spotcast\\client\\src\\components\\forecast-cards\\forecast-card-minified\\minified-components\\TideMinified.jsx":"28","C:\\Users\\ericg\\OneDrive\\Bureau\\Pro\\Code\\Projet-2-SpotCast\\2023-02-js-btz-spotcast\\client\\src\\components\\forecast-cards\\forecast-card-minified\\minified-components\\Energie-Minified.jsx":"29","C:\\Users\\ericg\\OneDrive\\Bureau\\Pro\\Code\\Projet-2-SpotCast\\2023-02-js-btz-spotcast\\client\\src\\components\\forecast-cards\\forecast-card-extended\\extended-components\\EnergieExtended.jsx":"30"},{"size":248,"mtime":1683022490016,"results":"31","hashOfConfig":"32"},{"size":207,"mtime":1683022489905,"results":"33","hashOfConfig":"32"},{"size":7235,"mtime":1683194875446,"results":"34","hashOfConfig":"32"},{"size":6677,"mtime":1683194875402,"results":"35","hashOfConfig":"32"},{"size":3594,"mtime":1683022490016,"results":"36","hashOfConfig":"32"},{"size":2854,"mtime":1683022489998,"results":"37","hashOfConfig":"32"},{"size":766,"mtime":1683194875435,"results":"38","hashOfConfig":"32"},{"size":3041,"mtime":1683022490000,"results":"39","hashOfConfig":"32"},{"size":2646,"mtime":1683022490011,"results":"40","hashOfConfig":"32"},{"size":4359,"mtime":1683022490014,"results":"41","hashOfConfig":"32"},{"size":1853,"mtime":1683194875420,"results":"42","hashOfConfig":"32"},{"size":2084,"mtime":1683194875419,"results":"43","hashOfConfig":"32"},{"size":3563,"mtime":1683022489977,"results":"44","hashOfConfig":"32"},{"size":534,"mtime":1683022489979,"results":"45","hashOfConfig":"32"},{"size":1859,"mtime":1683194875405,"results":"46","hashOfConfig":"32"},{"size":1125,"mtime":1683022489980,"results":"47","hashOfConfig":"32"},{"size":1518,"mtime":1683022489969,"results":"48","hashOfConfig":"32"},{"size":3921,"mtime":1683194875437,"results":"49","hashOfConfig":"32"},{"size":2277,"mtime":1683022489965,"results":"50","hashOfConfig":"32"},{"size":1520,"mtime":1683022490003,"results":"51","hashOfConfig":"32"},{"size":176,"mtime":1683022490004,"results":"52","hashOfConfig":"32"},{"size":207,"mtime":1683022490002,"results":"53","hashOfConfig":"32"},{"size":4947,"mtime":1683110031208,"results":"54","hashOfConfig":"32"},{"size":2968,"mtime":1683022489976,"results":"55","hashOfConfig":"32"},{"size":919,"mtime":1683022489974,"results":"56","hashOfConfig":"32"},{"size":838,"mtime":1683194875412,"results":"57","hashOfConfig":"32"},{"size":709,"mtime":1683194875415,"results":"58","hashOfConfig":"32"},{"size":1991,"mtime":1683022489973,"results":"59","hashOfConfig":"32"},{"size":1484,"mtime":1683194875411,"results":"60","hashOfConfig":"32"},{"size":511,"mtime":1683022489964,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},"12rh9s5",{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"65"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"65"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"65"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"65"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"124"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"65"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"65"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"65"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"65"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"65"},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},"C:\\Users\\ericg\\OneDrive\\Bureau\\Pro\\Code\\Projet-2-SpotCast\\2023-02-js-btz-spotcast\\client\\src\\index.js",[],[],[],"C:\\Users\\ericg\\OneDrive\\Bureau\\Pro\\Code\\Projet-2-SpotCast\\2023-02-js-btz-spotcast\\client\\src\\App.js",[],[],"C:\\Users\\ericg\\OneDrive\\Bureau\\Pro\\Code\\Projet-2-SpotCast\\2023-02-js-btz-spotcast\\client\\src\\pages\\Dashboard.jsx",["166","167","168","169","170"],[],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { createContext } from 'react';\r\nimport Wind from \"../components/widgets/wind/Wind\";\r\nimport MeteoDay from \"../components/widgets/meteo-day/MeteoDay\"\r\nimport MeteoThreeDay from \"../components/widgets/meteo-three-day/MeteoThreeDay\"\r\nimport NavBar from \"../components/widgets/navbar/NavBar\"\r\nimport ForecastCardBackground from \"../components/forecast-cards/ForecastCardBackground\";\r\nimport \"./Dashboard.css\";\r\nimport \"./ResponsiveDashboard.css\";\r\nimport Tide from \"../components/widgets/tide/Tide\";\r\nimport Sunset from \"../components/widgets/sunset/Sunset\";\r\nimport Muuri from 'muuri';\r\nimport Login from '../../src/components/widgets/login/Login';\r\nimport Register from '../../src/components/widgets/login/Register';\r\n\r\n\r\n// instancier un useContext\r\nexport const selectedSpotsContext = createContext();\r\n\r\n\r\nconst Dashboard = () => {\r\n\r\n  //setting up the Muuri effect\r\n  const [grid, setGrid] = useState();\r\n\r\n  useEffect(() => {\r\n    setGrid(\r\n      new Muuri('.grid', {\r\n        dragEnabled: true,\r\n        layoutDuration: 300,\r\n        layoutEasing: 'ease',\r\n        fillGaps: true,\r\n        sortData: {\r\n          id: function(item, element) {\r\n            return element.children[0].id;\r\n          }\r\n        }\r\n      })\r\n    );\r\n  }, []);\r\n  // debugger\r\n  //setting up Selected Spot \r\n  const [selectedSpots, setSelectedSpots] = useState(\r\n    [{\r\n    id : 0,\r\n    name : \"Biarritz - La Côte des Basques\",\r\n    latitude : \"43.48\",\r\n    longitude : \"-1.56\",\r\n    webcam : \"https://gosurf.fr/webcam/fr/7/Biarritz-La-Cote-des-Basques\"\r\n    }\r\n  ]);\r\n\r\n  //useState to check when the Open-Meteo API is loaded\r\n  const [onLoadOpenMeteo, setOnLoadOpenMeteo] = useState(true);\r\n\r\n  //Setting up a realtime clock\r\n  const [date, setDate] = useState(new Date());\r\n\r\n  //getting time and date every hour\r\n  useEffect(() => {\r\n    const timer = setInterval(() => setDate(new Date()), 3600000);\r\n    return function () {\r\n      clearInterval(timer);\r\n    };\r\n  });\r\n\r\n  //creating a time stamp written as the one in the API\r\n  const timeStamp = \r\n  `${date.getFullYear()}-${String(date.getMonth() +1).padStart(2,\"0\")}-${String(date.getDate()).padStart(2,\"0\")}T${String(date.getHours()).padStart(2,\"0\")}:00`;\r\n\r\n  //fetching the wind infos\r\n  const [wind, setWind] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `https://api.open-meteo.com/v1/gfs?latitude=${selectedSpots[0].latitude}&longitude=${selectedSpots[0].longitude}&hourly=windspeed_10m,winddirection_10m&timezone=Europe%2FBerlin`\r\n      )\r\n      .then((res) => res.data)\r\n      .then((data) => {\r\n        setWind(data.hourly);\r\n        setOnLoadOpenMeteo(false);\r\n      });\r\n  }, []);\r\n\r\n  //fetching the meteo infos\r\n  const [meteo, setMeteo] = useState([]);\r\n  const [onLoadMeteo, setOnLoadMeteo] = useState(true);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `https://api.open-meteo.com/v1/gfs?latitude=${selectedSpots[0].latitude}&longitude=${selectedSpots[0].longitude}&hourly=temperature_2m,weathercode&timezone=Europe%2FBerlin`\r\n      )\r\n      .then((res) => res.data)\r\n      .then((data) => {\r\n        setMeteo(data.hourly);\r\n        setOnLoadMeteo(false);\r\n      });\r\n  }, []);\r\n\r\n  //fetching meteo infos at 3 day.\r\n  const [meteo3D, setMeteo3D] = useState([]);\r\n  const [onLoadMeteo3D, setOnLoadMeteo3D] = useState(true);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `https://api.open-meteo.com/v1/gfs?latitude=${selectedSpots[0].latitude}&longitude=${selectedSpots[0].longitude}&daily=weathercode,temperature_2m_max,temperature_2m_min&timezone=Europe%2FBerlin`\r\n      )\r\n      .then((res) => res.data)\r\n      .then((data) => {\r\n        setMeteo3D(data.daily);\r\n        setOnLoadMeteo3D(false);\r\n      });\r\n  }, []);\r\n\r\n\r\n  //getting the index of current time in API array\r\n  const [timeStampIndex, setTimeStampIndex] = useState('');\r\n\r\n  useEffect(() => {\r\n    wind.time && //checking if 'wind.time' is already loaded\r\n      setTimeStampIndex(wind.time.indexOf(timeStamp));\r\n  }, [wind.time]); //setup timeStampIndex after ' wind.time' is updated\r\n\r\n  // all the UseStates for login popup\r\n  const [currentForm, setCurrentForm] = useState('login');\r\n  const [currentUserName, setCurrentUserName] = useState('Doudou');\r\n  const [currentUserPicture, setCurrentUserPicture] = useState(\r\n    'https://i.pinimg.com/originals/f9/9c/f1/f99cf1db89af1ea64a7085eca75d98b2.jpg'\r\n  );\r\n\r\n  const toggleForm = (formName) => {\r\n    setCurrentForm(formName);\r\n    setEmail(\"\");\r\n    setPass(\"\");\r\n    setError(\"\");\r\n  };\r\n\r\n  const toggleModal = () => {\r\n    setShow(!show);\r\n    setEmail('');\r\n    setPass('');\r\n    setError('');\r\n  };\r\n\r\n  const [show, setShow] = useState(true);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [pass, setPass] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <selectedSpotsContext.Provider value={[selectedSpots, setSelectedSpots] }>\r\n        {currentForm === 'login' ? (\r\n          <Login\r\n            toggleModal={toggleModal}\r\n            setCurrentUserName={setCurrentUserName}\r\n            setCurrentUserPicture={setCurrentUserPicture}\r\n            onFormSwitch={toggleForm}\r\n            show={show}\r\n            setShow={setShow}\r\n            email={email}\r\n            setEmail={setEmail}\r\n            pass={pass}\r\n            setPass={setPass}\r\n            error={error}\r\n            setError={setError}\r\n          />\r\n        ) : (\r\n          <Register\r\n            toggleModal={toggleModal}\r\n            show={show}\r\n            setShow={setShow}\r\n            onFormSwitch={toggleForm}\r\n          />\r\n        )}\r\n        <div className={show ? 'overlay-modal invisible' : 'overlay-modal'}\r\n          onClick={toggleModal}>\r\n        </div>\r\n        <NavBar\r\n          setShow={setShow}\r\n          show={show}\r\n          currentUserName={currentUserName}\r\n          currentUserPicture={currentUserPicture}\r\n        />\r\n        <div className=\"grid\">\r\n          <div className=\"item\">\r\n            <Wind\r\n              {...wind}\r\n              timeStampIndex={timeStampIndex}\r\n              onLoadOpenMeteo = {onLoadOpenMeteo}\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"item\">\r\n            <Tide\r\n              date={date}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"item\">\r\n            <MeteoDay\r\n            {...meteo}\r\n            onLoadMeteo={onLoadMeteo}\r\n            timeStampIndex={timeStampIndex}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"item\">\r\n            <MeteoThreeDay\r\n            meteo3D={meteo3D}\r\n            onLoadMeteo3D={onLoadMeteo3D}\r\n            />\r\n          </div>\r\n\r\n          {selectedSpots.map(selectedSpots => (\r\n            <div className=\"item\">\r\n              <ForecastCardBackground\r\n              key={selectedSpots.id}\r\n              selectedSpots={selectedSpots}\r\n              timeStamp={timeStamp}\r\n              />\r\n            </div>\r\n          ))}\r\n          <div className=\"item\">\r\n            <Sunset />\r\n          </div>\r\n      </div>\r\n    </selectedSpotsContext.Provider>\r\n  </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard\r\n","C:\\Users\\ericg\\OneDrive\\Bureau\\Pro\\Code\\Projet-2-SpotCast\\2023-02-js-btz-spotcast\\client\\src\\components\\forecast-cards\\ForecastCardBackground.jsx",["171","172","173","174","175","176","177"],[],"C:\\Users\\ericg\\OneDrive\\Bureau\\Pro\\Code\\Projet-2-SpotCast\\2023-02-js-btz-spotcast\\client\\src\\components\\widgets\\wind\\Wind.jsx",["178"],[],"import React, { useEffect, useState } from \"react\";\r\nimport \"./Wind.css\";\r\nimport \"../cards.css\";\r\nimport ToggleButton from \"../../utilities/ToggleButton\";\r\n\r\nconst Wind = ({\r\n  winddirection_10m,\r\n  windspeed_10m,\r\n  timeStampIndex,\r\n  onLoadOpenMeteo,\r\n}) => {\r\n  // useState et useEffect to transform the wind direction in \"north, north-east, east,...\"\r\n  const [windDirection, setWindDirection] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (onLoadOpenMeteo) {\r\n      return;\r\n    } else {\r\n      if (\r\n        winddirection_10m[timeStampIndex] > 337 ||\r\n        winddirection_10m[timeStampIndex] <= 22\r\n      ) {\r\n        setWindDirection(\"north\");\r\n      } else if (\r\n        winddirection_10m[timeStampIndex] > 22 &&\r\n        winddirection_10m[timeStampIndex] <= 67\r\n      ) {\r\n        setWindDirection(\"north-east\");\r\n      } else if (\r\n        winddirection_10m[timeStampIndex] > 67 &&\r\n        winddirection_10m[timeStampIndex] <= 112\r\n      ) {\r\n        setWindDirection(\"east\");\r\n      } else if (\r\n        winddirection_10m[timeStampIndex] > 112 &&\r\n        winddirection_10m[timeStampIndex] <= 157\r\n      ) {\r\n        setWindDirection(\"south-east\");\r\n      } else if (\r\n        winddirection_10m[timeStampIndex] > 157 &&\r\n        winddirection_10m[timeStampIndex] <= 202\r\n      ) {\r\n        setWindDirection(\"south\");\r\n      } else if (\r\n        winddirection_10m[timeStampIndex] > 202 &&\r\n        winddirection_10m[timeStampIndex] <= 247\r\n      ) {\r\n        setWindDirection(\"south-west\");\r\n      } else if (\r\n        winddirection_10m[timeStampIndex] > 247 &&\r\n        winddirection_10m[timeStampIndex] <= 292\r\n      ) {\r\n        setWindDirection(\"west\");\r\n      } else {\r\n        setWindDirection(\"north-west\");\r\n      }\r\n    }\r\n  }, [onLoadOpenMeteo]);\r\n\r\n  return (\r\n    <div className=\"small-square item-content\" id=\"A\">\r\n      <div className=\"card-header\">\r\n        <p className=\"card-title\">Wind</p>\r\n        <ToggleButton />\r\n      </div>\r\n      <div className=\"card-content\">\r\n        <div className=\"wind-chart\">\r\n          <div className=\"cardinal-points\">\r\n            <span\r\n              className={windDirection === \"north\" ? \"checked\" : \"\"}\r\n              style={{ \"--n\": 1 }}\r\n            ></span>\r\n            <span\r\n              className={windDirection === \"north-east\" ? \"checked\" : \"\"}\r\n              style={{ \"--n\": 2 }}\r\n            ></span>\r\n            <span\r\n              className={windDirection === \"east\" ? \"checked\" : \"\"}\r\n              style={{ \"--n\": 3 }}\r\n            ></span>\r\n            <span\r\n              className={windDirection === \"south-east\" ? \"checked\" : \"\"}\r\n              style={{ \"--n\": 4 }}\r\n            ></span>\r\n            <span\r\n              className={windDirection === \"south\" ? \"checked\" : \"\"}\r\n              style={{ \"--n\": 5 }}\r\n            ></span>\r\n            <span\r\n              className={windDirection === \"south-west\" ? \"checked\" : \"\"}\r\n              style={{ \"--n\": 6 }}\r\n            ></span>\r\n            <span\r\n              className={windDirection === \"west\" ? \"checked\" : \"\"}\r\n              style={{ \"--n\": 7 }}\r\n            ></span>\r\n            <span\r\n              className={windDirection === \"north-west\" ? \"checked\" : \"\"}\r\n              style={{ \"--n\": 8 }}\r\n            ></span>\r\n          </div>\r\n          <div className=\"wind-stats\">\r\n            <p className=\"wind-strenght\">\r\n              {timeStampIndex && Math.floor(windspeed_10m[timeStampIndex])}\r\n            </p>\r\n            <p>Km/h</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Wind;\r\n","C:\\Users\\ericg\\OneDrive\\Bureau\\Pro\\Code\\Projet-2-SpotCast\\2023-02-js-btz-spotcast\\client\\src\\components\\widgets\\meteo-day\\MeteoDay.jsx",["179","180","181"],[],"import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport ToggleButton from \"../../utilities/ToggleButton\";\r\nimport soleil from '../../../assets/images/soleil.svg';\r\nimport soleilNuages from '../../../assets/images/soleil-nuages.svg';\r\nimport nuages from '../../../assets/images/nuages.svg';\r\nimport pluie from '../../../assets/images/pluie.svg';\r\nimport vent from '../../../assets/images/vent.svg';\r\nimport neige from '../../../assets/images/neige.svg';\r\n\r\nimport \"../cards.css\";\r\nimport \"./MeteoDay.css\";\r\n\r\nconst MeteoDay = ({ weathercode, temperature_2m, timeStampIndex, onLoadMeteo, time }) => {\r\n\r\n    let [dayIcon, setDayIcon] = useState('')\r\n    let [weatherCode, setweatherCode] = useState(onLoadMeteo ? \"\" : weathercode[timeStampIndex])\r\n    let [weatherText, setweatherText] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        if (onLoadMeteo) {\r\n        } else if (weatherCode === 0) {\r\n            setDayIcon(soleil)\r\n            setweatherText(\"Soleil\")\r\n        } else if (weatherCode >= 1 || weatherCode <= 3) {\r\n            setDayIcon(soleilNuages)\r\n            setweatherText(\"Couvert\")\r\n        } else if (weatherCode >= 45 || weatherCode <= 48) {\r\n            setDayIcon(soleilNuages)\r\n            setweatherText(\"Brouillard\")\r\n        } else if (weatherCode >= 51 || weatherCode <= 57) {\r\n            setDayIcon(nuages)\r\n            setweatherText(\"Bruine\")\r\n        } else if (weatherCode >= 61 || weatherCode <= 67) {\r\n            setDayIcon(pluie)\r\n            setweatherText(\"Pluie\")\r\n        } else if ((weatherCode >= 71 || weatherCode <= 77) || (weatherCode >= 85 || weatherCode <= 86)) {\r\n            setDayIcon(neige)\r\n            setweatherText(\"Neige\")\r\n        } else if (weatherCode >= 80 || weatherCode <= 82) {\r\n            setDayIcon(pluie)\r\n            setweatherText(\"Averses\")\r\n        } if (weatherCode >= 95) {\r\n            setDayIcon(pluie)\r\n            setweatherText(\"Orages\")\r\n        }\r\n    }, [onLoadMeteo])\r\n\r\n    return (\r\n        <div className=\"small-square item-content\" id=\"A\">\r\n            <div className=\"card-header\">\r\n                <p className=\"card-title\">Meteo</p>\r\n                <ToggleButton />\r\n            </div>\r\n            <div className=\"card-content card-meteo\">\r\n                {onLoadMeteo ? \"\" :\r\n                <div className=\"day-icon\">\r\n                    <img src={dayIcon} alt=\"soleil\" />\r\n                </div>\r\n                }\r\n                {onLoadMeteo ? \"\" :\r\n                <div className=\"meteo-infos\">\r\n                    <p className=\"meteo-temperature\">{temperature_2m[timeStampIndex]}°</p>\r\n                    <p className=\"meteo-text\">{weatherText}</p>\r\n                </div>\r\n                }\r\n\r\n                \r\n            </div>\r\n                \r\n                \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MeteoDay","C:\\Users\\ericg\\OneDrive\\Bureau\\Pro\\Code\\Projet-2-SpotCast\\2023-02-js-btz-spotcast\\client\\src\\components\\widgets\\navbar\\NavBar.jsx",["182"],[],"import logo from '../../../assets/logo-header.svg';\r\nimport './NavBar.css';\r\nimport './ResponsiveNavBar.css';\r\nimport SearchBar from './searchbar/SearchBar';\r\n\r\nconst NavBar = ({ setShow, show, currentUserPicture, currentUserName }) => {\r\n  const handleShow = () => setShow(!show);\r\n\r\n  return (\r\n    <div className=\"navbar\">\r\n      <SearchBar />\r\n      <div className=\"logo\">\r\n        <img src={logo} alt=\"logo\" />\r\n      </div>\r\n\r\n      <div className=\"login\">\r\n        <div className=\"login-align\">\r\n          <div className=\"user-name\">{currentUserName}</div>\r\n          <div className=\"user-img\">\r\n            <img onClick={handleShow} src={currentUserPicture} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","C:\\Users\\ericg\\OneDrive\\Bureau\\Pro\\Code\\Projet-2-SpotCast\\2023-02-js-btz-spotcast\\client\\src\\components\\widgets\\meteo-three-day\\MeteoThreeDay.jsx",[],[],"C:\\Users\\ericg\\OneDrive\\Bureau\\Pro\\Code\\Projet-2-SpotCast\\2023-02-js-btz-spotcast\\client\\src\\components\\widgets\\sunset\\Sunset.jsx",[],[],"C:\\Users\\ericg\\OneDrive\\Bureau\\Pro\\Code\\Projet-2-SpotCast\\2023-02-js-btz-spotcast\\client\\src\\components\\widgets\\tide\\Tide.jsx",["183","184","185","186","187","188"],[],"import React, { useEffect } from 'react'\r\nimport ToggleButton from '../../utilities/ToggleButton'\r\nimport './Tide.css'\r\nimport TideDatas from '../../utilities/TideDatas'\r\nimport tideShape from '../../../tide-shape.svg'\r\n\r\nconst Tide = ({ date }) => {\r\n\r\n    const tideTime = TideDatas.map((el) => el.time);\r\n    //Création d'un tableau qui contient tous les TimeStamps des marées\r\n\r\n    let negative = -25000000;// Temps en ms = 8h30\r\n    let positive = 25000000;// Temps en ms = 8h30\r\n\r\n    let currentTide = \"\";\r\n    let currentTideIndex = \"\";\r\n    let currentTideinfos = \"\";\r\n\r\n    let previousTide = \"\";\r\n    let previousTideIndex = \"\";\r\n    let previousTideinfos = \"\";\r\n\r\n    let nextTide = \"\";\r\n    let nextTideIndex = \"\";\r\n    let nextTideinfos = \"\";\r\n\r\n\r\n    for (let i = 0; i < tideTime.length; i++) {\r\n\r\n        let result = new Date(tideTime[i]) - date;\r\n\r\n        if ((result === 0) || ((result >= - 1800000) && (result <= 1800000))) {\r\n            currentTide = tideTime[i];\r\n            currentTideIndex = i;\r\n            currentTideinfos = TideDatas[i];\r\n        } else if ((result < 0) && (result > negative)) {\r\n            negative = result;\r\n            previousTide = tideTime[i];\r\n            previousTideIndex = i;\r\n            previousTideinfos = TideDatas[i];\r\n        } else if ((result > 0) && (result < positive)) {\r\n            positive = result;\r\n            nextTide = tideTime[i];\r\n            nextTideIndex = i;\r\n            nextTideinfos = TideDatas[i];\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className='big-rectangle-width tide-card item-content' id=\"B\">\r\n            <div className=\"card-header\">\r\n                <p className=\"card-title\">Tide</p>\r\n                <ToggleButton />\r\n            </div>\r\n            <div className='card-content tide-content'>\r\n                <div className='tide-shape'>\r\n                    <div className={currentTide ? `circle ${currentTideinfos.type}` : `circle going-${nextTideinfos.type}`} ></div>\r\n                    <img src={tideShape} alt=\"\" />\r\n\r\n                </div>\r\n                {currentTide\r\n                    ? <div className='tide-datas'>\r\n                        <div className='low-tide'>\r\n                            <p className='tide-data'>\r\n                                {`${String(new Date(currentTideinfos.time).getHours()).padStart(2, \"0\")} : ${String(new Date(currentTideinfos.time).getMinutes()).padStart(2, \"0\")}`}\r\n                            </p>\r\n                            <p className='tide-text'>\r\n                                {currentTideinfos.type} tide\r\n                            </p>\r\n                        </div>\r\n                        <div className='high-tide'>\r\n                            <p className='tide-data'>\r\n                                {`${String(new Date(nextTideinfos.time).getHours()).padStart(2, \"0\")} : ${String(new Date(nextTideinfos.time).getMinutes()).padStart(2, \"0\")}`}\r\n                            </p>\r\n                            <p className='tide-text'>\r\n                                {nextTideinfos.type} tide\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    : <div className='tide-datas'>\r\n                        <div className='low-tide'>\r\n                            <p className='tide-data'>\r\n                                {`${String(new Date(previousTideinfos.time).getHours()).padStart(2, \"0\")}:${String(new Date(previousTideinfos.time).getMinutes()).padStart(2, \"0\")}`}\r\n                            </p>\r\n                            <p className='tide-text'>\r\n                                {previousTideinfos.type} tide\r\n                            </p>\r\n                        </div>\r\n                        <div className='high-tide'>\r\n                            <p className='tide-data'>\r\n                                {`${String(new Date(nextTideinfos.time).getHours()).padStart(2, \"0\")}:${String(new Date(nextTideinfos.time).getMinutes()).padStart(2, \"0\")}`}\r\n                            </p>\r\n                            <p className='tide-text'>\r\n                                {nextTideinfos.type} tide\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tide","C:\\Users\\ericg\\OneDrive\\Bureau\\Pro\\Code\\Projet-2-SpotCast\\2023-02-js-btz-spotcast\\client\\src\\components\\widgets\\login\\Register.jsx",["189"],[],"import { useState } from 'react';\r\nimport './Login.css';\r\n\r\nconst Register = (props) => {\r\n  const [email, setEmail] = useState('');\r\n  const [pass, setPass] = useState('');\r\n  const [name, setName] = useState('');\r\n\r\n  const handleShow = () => props.setShow(!props.show);\r\n\r\n  const handleSubmit = () => {\r\n    email.preventDefault();\r\n    console.log(email);\r\n  };\r\n  return (\r\n    <div\r\n      className={\r\n        props.show ? 'auth-form-container invisible' : 'auth-form-container'\r\n      }>\r\n      <button onClick={handleShow} className=\"closing-cross\"></button>\r\n      <form className=\"register-form\" onSubmit={handleSubmit}>\r\n        <label className=\"label-form\" htmlfor=\"name\">\r\n          Full name\r\n        </label>\r\n        <input\r\n          className=\"input-form\"\r\n          value={name}\r\n          name=\"name\"\r\n          id=\"name\"\r\n          placeholder=\"Full name\"\r\n        />\r\n        <label className=\"label-form\" htmlfor=\"email\">\r\n          Email\r\n        </label>\r\n        <input\r\n          className=\"input-form\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          type=\"email\"\r\n          placeholder=\"youremail@example.com\"\r\n          id=\"email\"\r\n          name=\"email\"\r\n        />\r\n        <label className=\"label-form\" htmlfor=\"password\">\r\n          Password\r\n        </label>\r\n        <input\r\n          className=\"input-form\"\r\n          value={pass}\r\n          onChange={(e) => setPass(e.target.value)}\r\n          type=\"password\"\r\n          placeholder=\"*******\"\r\n          id=\"password\"\r\n          name=\"password\"\r\n        />\r\n        <button className=\"btn-login\">Log In</button>\r\n      </form>\r\n      <button className=\"btn-link\" onClick={() => props.onFormSwitch('login')}>\r\n        Already have an account? Log in here\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","C:\\Users\\ericg\\OneDrive\\Bureau\\Pro\\Code\\Projet-2-SpotCast\\2023-02-js-btz-spotcast\\client\\src\\components\\widgets\\login\\Login.jsx",["190","191"],[],"C:\\Users\\ericg\\OneDrive\\Bureau\\Pro\\Code\\Projet-2-SpotCast\\2023-02-js-btz-spotcast\\client\\src\\components\\utilities\\TideDatas.jsx",[],[],"C:\\Users\\ericg\\OneDrive\\Bureau\\Pro\\Code\\Projet-2-SpotCast\\2023-02-js-btz-spotcast\\client\\src\\components\\utilities\\ToggleButton.jsx",[],[],"C:\\Users\\ericg\\OneDrive\\Bureau\\Pro\\Code\\Projet-2-SpotCast\\2023-02-js-btz-spotcast\\client\\src\\components\\forecast-cards\\forecast-card-extended\\ForecastCardExtended.jsx",[],[],"C:\\Users\\ericg\\OneDrive\\Bureau\\Pro\\Code\\Projet-2-SpotCast\\2023-02-js-btz-spotcast\\client\\src\\components\\utilities\\UsersDataBase.jsx",[],[],"C:\\Users\\ericg\\OneDrive\\Bureau\\Pro\\Code\\Projet-2-SpotCast\\2023-02-js-btz-spotcast\\client\\src\\components\\forecast-cards\\forecast-card-minified\\ForecastCardMinified.jsx",["192"],[],"import React, { useState } from 'react'\r\nimport WindMinified from './minified-components/Wind-Minified'\r\nimport EnergieMinified from './minified-components/Energie-Minified'\r\nimport PeriodeMinified from './minified-components/PeriodeMinified'\r\nimport Swell from './minified-components/Swell'\r\n\r\nimport './ForecastCardMinified.css'\r\nimport TideMinified from './minified-components/TideMinified'\r\n\r\n\r\nconst ForecastCardMinified = ({number, surfDataWind, onLoad, surfDataHoule, onLoadMarine, tide, dayDate, functionChange, date}) => {\r\n\r\n  const sendBackIndex = () => {\r\n    functionChange(number)\r\n  }\r\n  \r\n\r\n  return (\r\n    <div className='minified-background' onClick={sendBackIndex}> \r\n\r\n        <div className='date'>{date}</div>\r\n        \r\n        <WindMinified \r\n            number ={number}\r\n            surfDataWind ={surfDataWind}\r\n            onLoad ={onLoad}\r\n         />\r\n        <EnergieMinified\r\n           number ={number}\r\n           surfDataHoule = {surfDataHoule}\r\n           onLoadMarine ={onLoadMarine}\r\n           onLoad ={onLoad}\r\n        />\r\n\r\n        <Swell\r\n          number ={number}\r\n          surfDataHoule = {surfDataHoule}\r\n          onLoadMarine ={onLoadMarine}\r\n        />\r\n\r\n        <PeriodeMinified\r\n          number ={number}\r\n          surfDataHoule = {surfDataHoule}\r\n          onLoadMarine ={onLoadMarine}\r\n        />\r\n        <TideMinified \r\n          tide={tide}\r\n          dayDate={dayDate}\r\n        />\r\n    \r\n    \r\n    \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ForecastCardMinified","C:\\Users\\ericg\\OneDrive\\Bureau\\Pro\\Code\\Projet-2-SpotCast\\2023-02-js-btz-spotcast\\client\\src\\components\\widgets\\navbar\\searchbar\\SearchBar.jsx",["193","194","195","196"],[],"import {useEffect, useState} from 'react';\r\nimport { useContext } from 'react';\r\nimport { selectedSpotsContext } from '../../../../pages/Dashboard';\r\nimport SpotDataBase from '../../../utilities/SpotDataBase';\r\nimport starfilled from '../../../../assets/images/star-filled.svg';\r\nimport staroutline from '../../../../assets/images/star-outline.svg';\r\nimport '../NavBar.css';\r\n\r\nconst SearchBar = () => {\r\n\r\n  \r\n    // -----------------------------------------Fav icon useState\r\n  const [isFavorite, setIsFavorite] = useState(false);\r\n    //------------------------ -----------------Search input useState\r\n  const [searchInput, setSearchInput] = useState(\"\");\r\n\r\n  // -----------------------------------------Value in String of the Current spots useState\r\n  const [currentSpots, setCurrentSpots] = useState(\"Biarritz - La Côte des Basques\")\r\n\r\n  // -----------------------------------------Selected Spot by the user and store in the new tab\r\n  const [selectedSpots, setSelectedSpots] = useContext(selectedSpotsContext)\r\n\r\n  const[searchActive, setSearchActive] = useState(false)\r\n\r\n  //------------------------------------------Create a new array with filtered database\r\n  let spots= SpotDataBase.filter((spot) =>\r\n      spot.name.toLowerCase().match(searchInput.toLowerCase())\r\n  );\r\n\r\n\r\n  //--------------------------------------------Create a variable for the clicked selected spot\r\n  const onSelectSpot = (spot) => {\r\n    setCurrentSpots(spot.name);\r\n    setSearchInput('');\r\n    setSearchActive(true)\r\n  }\r\n\r\n  // -------------------------------------------Create a variable to implement the data on the search bar\r\n  const onChange = (e) => {\r\n    setSearchInput(e.target.value);\r\n    spots = SpotDataBase.filter((spot) =>\r\n      spot.name.toLowerCase().match(searchInput.toLowerCase())\r\n  );\r\n    \r\n  }\r\n  \r\n  const handleFavorite=()=>{\r\n    setIsFavorite(!isFavorite)\r\n  }\r\n\r\n  // -------------------------------------------Filter the selected object to match it with the data base and rendered in a new tab as an object\r\n  useEffect(() => {\r\n\r\n    searchActive ?\r\n      setSelectedSpots(SpotDataBase.filter((selectSpot) => \r\n      selectSpot.name == currentSpots))\r\n    : setSelectedSpots(selectedSpots)\r\n   \r\n  },[currentSpots])\r\n\r\n  \r\n  return (\r\n    <div className=\"searchbar\">\r\n\r\n        {/* Create the search bar */}\r\n\r\n          <input\r\n            className=\"search-input\"\r\n            type=\"text\"\r\n            placeholder=\"Select your spot here!\"\r\n            value={searchInput}\r\n            onChange={onChange}\r\n          />\r\n          \r\n          {/* Create the dropdown suggestion box in a new tab that is generated on the spot as you input in the search bar */}\r\n          \r\n          {searchInput !== '' && (\r\n            <ul className='dropdown-search'>\r\n              {spots.map(spot => (\r\n                <li key={spot.id}>\r\n                  <p  onClick={() =>  onSelectSpot(spot)}>{spot.name}</p>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n\r\n        <div className=\"current-location\">\r\n          {/* Implement a clickable favorite icon for your surf spot */}\r\n          <img onClick={handleFavorite} src={isFavorite ? starfilled : staroutline} />\r\n          <div className=\"selected-spot\">\r\n            {currentSpots}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Implement a clickable webcam link for your surf spot if it exists in the data base*/}\r\n       <div className=\"webcam-link\">\r\n        {selectedSpots.length === 0 \r\n          ? \"\" \r\n          : selectedSpots[0].webcam === false\r\n            ? \"\" \r\n            : <a href={selectedSpots[0].webcam} target='_blank'>Access the webcam</a> }\r\n            {/* The ternary operator here ask if the object selectedSpots is empty or not, \r\n            then fetch the value of the key webcam and display it if it exists */}\r\n        </div>\r\n       \r\n      </div>\r\n      \r\n  )\r\n}\r\n\r\nexport default SearchBar","C:\\Users\\ericg\\OneDrive\\Bureau\\Pro\\Code\\Projet-2-SpotCast\\2023-02-js-btz-spotcast\\client\\src\\components\\forecast-cards\\forecast-card-extended\\forecast-extended-components\\DailyTide.jsx",["197"],[],"import React from 'react'\r\nimport tideShape from '../../../../assets/images/tide-shape.svg'\r\n\r\nconst DailyTide = ({ tide, dayDate }) => {\r\n\r\n    //Création d'un tableau qui contient tous les TimeStamps des marées\r\n    const tideTime = tide.map((el) => el.time);\r\n\r\n    // Date formating to match the needs\r\n    const dayDateFormat = dayDate.toISOString().slice(0,10)\r\n    \r\n    // get the tides of the current day\r\n    let dayTides = tide.filter((dayTide) => dayTide.time.match(dayDateFormat))\r\n\r\n    //separate high tides and low tides\r\n    let dayHighTides = dayTides.filter((tide) => tide.type===\"high\");\r\n    let dayLowTides  = dayTides.filter((tide) => tide.type===\"low\");\r\n    \r\n\r\n  return (\r\n    <div className=\"daily-tide\">\r\n        <div className=\"coeff\">\r\n            <p className=\"coeff-data\">\r\n                120\r\n            </p>\r\n            <p>Coeff</p>\r\n        </div>\r\n        <div className=\"tide\">\r\n            <div className=\"daily-high-tide\">\r\n                <p className=\"first-high-tide\">{dayHighTides[0] \r\n                ? `${String(new Date(dayHighTides[0].time).getHours()).padStart(2, \"0\")}:${String(new Date(dayHighTides[0].time).getMinutes()).padStart(2, \"0\")} `\r\n                : \"\"}\r\n                </p>\r\n                <p className=\"second-high-tide\">{dayHighTides[1]\r\n                ? `${String(new Date(dayHighTides[1].time).getHours()).padStart(2, \"0\")}:${String(new Date(dayHighTides[0].time).getMinutes()).padStart(2, \"0\")} `\r\n                : \"\"}\r\n                </p>\r\n            </div>\r\n            <img src={tideShape} alt=\"\" className=\"tide-shapes\" />\r\n            <div className=\"daily-low-tide\">\r\n                <p className=\"first-low-tide\">{dayLowTides[0] \r\n                ? `${String(new Date(dayLowTides[0].time).getHours()).padStart(2, \"0\")}:${String(new Date(dayLowTides[0].time).getMinutes()).padStart(2, \"0\")} `\r\n                : \"\"}\r\n                </p>\r\n                <p className=\"second-low-tide\">{dayLowTides[1] \r\n                ? `${String(new Date(dayLowTides[1].time).getHours()).padStart(2, \"0\")}:${String(new Date(dayLowTides[1].time).getMinutes()).padStart(2, \"0\")} `\r\n                : \"\"}\r\n                </p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DailyTide","C:\\Users\\ericg\\OneDrive\\Bureau\\Pro\\Code\\Projet-2-SpotCast\\2023-02-js-btz-spotcast\\client\\src\\components\\widgets\\meteo-three-day\\components\\IconMeteoThreeDays.jsx",["198","199","200"],[],"import React, { useEffect, useState } from 'react'\r\nimport soleil from '../../../../assets/images/soleil.svg';\r\nimport soleilNuages from '../../../../assets/images/soleil-nuages.svg';\r\nimport nuages from '../../../../assets/images/nuages.svg';\r\nimport pluie from '../../../../assets/images/pluie.svg';\r\nimport vent from '../../../../assets/images/vent.svg';\r\nimport neige from '../../../../assets/images/neige.svg';\r\n\r\n\r\n\r\nconst IconMeteoThreeDays = ({ meteoIcon, onLoadMeteo3D }) => {\r\n\r\n    const [dayIcon, setDayIcon] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n\r\n        if (onLoadMeteo3D) {\r\n        } else if (meteoIcon === 0) {\r\n            setDayIcon(soleil)\r\n        } else if (meteoIcon >= 1 && meteoIcon <= 3) {\r\n            setDayIcon(soleilNuages)\r\n        } else if (meteoIcon >= 45 && meteoIcon <= 48) {\r\n            setDayIcon(soleilNuages)\r\n        } else if (meteoIcon >= 51 && meteoIcon <= 57) {\r\n            setDayIcon(nuages)\r\n        } else if (meteoIcon >= 61 && meteoIcon <= 67) {\r\n            setDayIcon(pluie)\r\n        } else if ((meteoIcon >= 71 && meteoIcon <= 77) || (meteoIcon >= 85 && meteoIcon <= 86)) {\r\n            setDayIcon(neige)\r\n        } else if (meteoIcon >= 80 && meteoIcon <= 82) {\r\n            setDayIcon(pluie)\r\n        } if (meteoIcon >= 95) {\r\n            setDayIcon(pluie)\r\n        }\r\n    }, [onLoadMeteo3D])\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className='day-icon-3d'>\r\n            <img src={dayIcon} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IconMeteoThreeDays\r\n\r\n","C:\\Users\\ericg\\OneDrive\\Bureau\\Pro\\Code\\Projet-2-SpotCast\\2023-02-js-btz-spotcast\\client\\src\\components\\widgets\\meteo-three-day\\components\\TempThreeDays.jsx",[],[],"C:\\Users\\ericg\\OneDrive\\Bureau\\Pro\\Code\\Projet-2-SpotCast\\2023-02-js-btz-spotcast\\client\\src\\components\\widgets\\meteo-three-day\\components\\DateThreeDays.jsx",[],[],"C:\\Users\\ericg\\OneDrive\\Bureau\\Pro\\Code\\Projet-2-SpotCast\\2023-02-js-btz-spotcast\\client\\src\\components\\forecast-cards\\forecast-card-extended\\forecast-extended-components\\HourlyForecast.jsx",["201","202"],[],"import React, { useState, useEffect } from \"react\";\r\nimport chartBar from \"../../../../assets/images/swell-bar.svg\";\r\nimport chartWaveBar from \"../../../../assets/images/swell-wave-bar.svg\";\r\nimport windDirectionIcon from '../../../../assets/images/wind-direction.svg'\r\nimport EnergieExtended from \"../extended-components/EnergieExtended\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n\r\nconst HourlyForecast = ({\r\n  windSpeedByDay,\r\n  windDirectionByDay,\r\n  waveHeightByDay,\r\n  wavePeriodByDay,\r\n  waveDirectionByDay,\r\n  index,\r\n  onLoad,\r\n  onLoadMarine,\r\n}) => {\r\n\r\n  const hoursShowed = [5, 8, 11, 14, 17, 20, 23];\r\n\r\n  // useState et useEffect to transform the swell height in chart bars\r\n  const [swellChartBar, setSwellChartBar] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (onLoadMarine) {\r\n      return;\r\n    } else {\r\n      if (waveHeightByDay[hoursShowed[index]].toFixed(1) < 0.5) {\r\n        setSwellChartBar(1);\r\n      } else if (\r\n        waveHeightByDay[hoursShowed[index]].toFixed(1) >= 0.5 &&\r\n        waveHeightByDay[hoursShowed[index]].toFixed(1) <= 0.9\r\n      ) {\r\n        setSwellChartBar(2);\r\n      } else if (\r\n        waveHeightByDay[hoursShowed[index]].toFixed(1) >= 1 &&\r\n        waveHeightByDay[hoursShowed[index]].toFixed(1) <= 1.5\r\n      ) {\r\n        setSwellChartBar(3);\r\n      } else if (\r\n        waveHeightByDay[hoursShowed[index]].toFixed(1) >= 1.6 &&\r\n        waveHeightByDay[hoursShowed[index]].toFixed(1) <= 2\r\n      ) {\r\n        setSwellChartBar(4);\r\n      } else if(\r\n        waveHeightByDay[hoursShowed[index]].toFixed(1) >= 2.1 \r\n      ) {\r\n        setSwellChartBar(5);\r\n      }\r\n    }\r\n  }, [onLoadMarine]);\r\n\r\n  // useState et useEffect to transform the wind direction in \"N, NE, E, SE, S,...\"\r\n  const [waveDirection, setWaveDirection] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (onLoadMarine) {\r\n      return;\r\n    } else {\r\n      if (\r\n        waveDirectionByDay[hoursShowed[index]] > 337 ||\r\n        waveDirectionByDay[hoursShowed[index]] <= 22\r\n      ) {\r\n        setWaveDirection(\"N\");\r\n      } else if (\r\n        waveDirectionByDay[hoursShowed[index]] > 22 &&\r\n        waveDirectionByDay[hoursShowed[index]] <= 67\r\n      ) {\r\n        setWaveDirection(\"NE\");\r\n      } else if (\r\n        waveDirectionByDay[hoursShowed[index]] > 67 &&\r\n        waveDirectionByDay[hoursShowed[index]] <= 112\r\n      ) {\r\n        setWaveDirection(\"E\");\r\n      } else if (\r\n        waveDirectionByDay[hoursShowed[index]] > 112 &&\r\n        waveDirectionByDay[hoursShowed[index]] <= 157\r\n      ) {\r\n        setWaveDirection(\"SE\");\r\n      } else if (\r\n        waveDirectionByDay[hoursShowed[index]] > 157 &&\r\n        waveDirectionByDay[hoursShowed[index]] <= 202\r\n      ) {\r\n        setWaveDirection(\"S\");\r\n      } else if (\r\n        waveDirectionByDay[hoursShowed[index]] > 202 &&\r\n        waveDirectionByDay[hoursShowed[index]] <= 247\r\n      ) {\r\n        setWaveDirection(\"SW\");\r\n      } else if (\r\n        waveDirectionByDay[hoursShowed[index]] > 247 &&\r\n        waveDirectionByDay[hoursShowed[index]] <= 292\r\n      ) {\r\n        setWaveDirection(\"W\");\r\n      } else {\r\n        setWaveDirection(\"NW\");\r\n      }\r\n    }\r\n  }, [onLoadMarine]);\r\n\r\n\r\n  return (\r\n    <div className=\"hourly-forecast\">\r\n      <div className=\"hourly-wind-container\">\r\n        <p className=\"time\">{onLoad ? \"\" : hoursShowed[index]}h</p>\r\n        <div className=\"hourly-wind\">\r\n          <div className=\"hourly-wind-direction\">\r\n            <p className=\"hourly-wind-data\">\r\n              {onLoad ? \"\" : Math.floor(windSpeedByDay[hoursShowed[index]])}\r\n            </p>\r\n            <img \r\n                style={{ transform: `translate(-50%, -50%) rotate(${windDirectionByDay[hoursShowed[index]]}deg)`}} \r\n                className=\"wind-direction-arrow\" \r\n                src={windDirectionIcon} alt=\"wind-direction\" \r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"hourly-swell-container\">\r\n        <div className=\"swell-chart\">\r\n          <img className=\"swell-chart-bar\" src={chartWaveBar} alt=\"\" />\r\n          {Array(swellChartBar)\r\n            .fill()\r\n            .map((_, index) => (\r\n              <img key={uuidv4()} className=\"swell-chart-bar\" src={chartBar} alt=\"chart-bar\" />\r\n            ))}\r\n        </div>\r\n          <EnergieExtended\r\n            waveHeightByDay = {waveHeightByDay}\r\n            wavePeriodByDay = {wavePeriodByDay}\r\n            index ={index}\r\n            onLoadMarine ={onLoadMarine}\r\n          />\r\n        <p className=\"hourly-swell\">\r\n          {onLoadMarine ? \"\" : waveHeightByDay[hoursShowed[index]].toFixed(1)}\r\n        </p>\r\n        <p className=\"hourly-swell-direction\">\r\n          {onLoadMarine ? \"\" : waveDirection}\r\n        </p>\r\n      </div>\r\n      <div className=\"hourly-period\">\r\n        <p>\r\n          {onLoadMarine ? \"\" : Math.floor(wavePeriodByDay[hoursShowed[index]])}s\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HourlyForecast;\r\n","C:\\Users\\ericg\\OneDrive\\Bureau\\Pro\\Code\\Projet-2-SpotCast\\2023-02-js-btz-spotcast\\client\\src\\components\\utilities\\SpotDataBase.jsx",[],[],"C:\\Users\\ericg\\OneDrive\\Bureau\\Pro\\Code\\Projet-2-SpotCast\\2023-02-js-btz-spotcast\\client\\src\\components\\forecast-cards\\forecast-card-minified\\minified-components\\Wind-Minified.jsx",["203","204","205"],[],"import React, { useState } from 'react'\r\nimport { useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\nconst WindMinified = ({number, onLoad, surfDataWind}) => {\r\n\r\n\r\n    const numberHours = [24, 48, 72, 96, 120, 144, 168]\r\n\r\n    let dayWindRange = \"\";\r\n    \r\n    \r\n    if(onLoad){\r\n      dayWindRange = \"\"\r\n    } else {\r\n      dayWindRange = surfDataWind.hourly.windspeed_10m.filter((el,index)=>(\r\n        number === 0 \r\n        ? index <= numberHours[number] \r\n        : index <=numberHours[number] & index >numberHours[number -1]        \r\n    ))\r\n    }\r\n\r\n    \r\n    \r\n    \r\n  \r\n  return (\r\n    <div className='Wind'>\r\n    <p className='title-minified' >Wind</p>\r\n    <p className='data-minified'>{onLoad ? \"\" :`${surfDataWind &&  Math.min(...dayWindRange)} - ${surfDataWind &&  Math.max(...dayWindRange)} ` }</p>\r\n    <p className='title-minified' >km/H</p>\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default WindMinified","C:\\Users\\ericg\\OneDrive\\Bureau\\Pro\\Code\\Projet-2-SpotCast\\2023-02-js-btz-spotcast\\client\\src\\components\\forecast-cards\\forecast-card-minified\\minified-components\\PeriodeMinified.jsx",[],[],"C:\\Users\\ericg\\OneDrive\\Bureau\\Pro\\Code\\Projet-2-SpotCast\\2023-02-js-btz-spotcast\\client\\src\\components\\forecast-cards\\forecast-card-minified\\minified-components\\Swell.jsx",[],[],"C:\\Users\\ericg\\OneDrive\\Bureau\\Pro\\Code\\Projet-2-SpotCast\\2023-02-js-btz-spotcast\\client\\src\\components\\forecast-cards\\forecast-card-minified\\minified-components\\TideMinified.jsx",["206"],[],"import React from 'react'\r\n\r\nconst TideMinified = ({ tide, dayDate }) => {\r\n\r\n    //Création d'un tableau qui contient tous les TimeStamps des marées\r\n    const tideTime = tide.map((el) => el.time);\r\n\r\n    // Date formating to match the needs\r\n    const dayDateFormat = dayDate.toISOString().slice(0,10)\r\n    \r\n    // get the tides of the current day\r\n    let dayTides = tide.filter((dayTide) => dayTide.time.match(dayDateFormat))\r\n\r\n    //separate high tides and low tides\r\n    let dayHighTides = dayTides.filter((tide) => tide.type===\"high\");\r\n    let dayLowTides  = dayTides.filter((tide) => tide.type===\"low\");\r\n    \r\n  return (\r\n    <div className=\"tides\">\r\n        <p className='title-minified'>Tides</p>\r\n        <div  className='tide-minified'>\r\n            <div className='data-minified-tide'>\r\n              <div className='arrow'> ↓</div>\r\n             \r\n                {dayHighTides[0] \r\n                ? `${String(new Date(dayHighTides[0].time).getHours()).padStart(2, \"0\")}:${String(new Date(dayHighTides[0].time).getMinutes()).padStart(2, \"0\")} `\r\n                : \"\"}\r\n        \r\n                {dayHighTides[1] \r\n                ? `${String(new Date(dayHighTides[1].time).getHours()).padStart(2, \"0\")}:${String(new Date(dayHighTides[0].time).getMinutes()).padStart(2, \"0\")} `\r\n                : \"\"}\r\n            </div>\r\n            <div className='data-minified-tide'>\r\n            <div className='arrow'> ↑</div>\r\n         \r\n                {dayLowTides[0] \r\n                ? `${String(new Date(dayLowTides[0].time).getHours()).padStart(2, \"0\")}:${String(new Date(dayLowTides[0].time).getMinutes()).padStart(2, \"0\")} `\r\n                : \"\"}\r\n              \r\n                {dayLowTides[1] \r\n                ? `${String(new Date(dayLowTides[1].time).getHours()).padStart(2, \"0\")}:${String(new Date(dayLowTides[1].time).getMinutes()).padStart(2, \"0\")} `\r\n                : \"\"}\r\n            </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TideMinified","C:\\Users\\ericg\\OneDrive\\Bureau\\Pro\\Code\\Projet-2-SpotCast\\2023-02-js-btz-spotcast\\client\\src\\components\\forecast-cards\\forecast-card-minified\\minified-components\\Energie-Minified.jsx",["207"],[],"C:\\Users\\ericg\\OneDrive\\Bureau\\Pro\\Code\\Projet-2-SpotCast\\2023-02-js-btz-spotcast\\client\\src\\components\\forecast-cards\\forecast-card-extended\\extended-components\\EnergieExtended.jsx",[],[],{"ruleId":"208","severity":1,"message":"209","line":24,"column":10,"nodeType":"210","messageId":"211","endLine":24,"endColumn":14},{"ruleId":"212","severity":1,"message":"213","line":107,"column":6,"nodeType":"214","endLine":107,"endColumn":8,"suggestions":"215"},{"ruleId":"212","severity":1,"message":"213","line":123,"column":6,"nodeType":"214","endLine":123,"endColumn":8,"suggestions":"216"},{"ruleId":"212","severity":1,"message":"213","line":139,"column":6,"nodeType":"214","endLine":139,"endColumn":8,"suggestions":"217"},{"ruleId":"212","severity":1,"message":"218","line":148,"column":6,"nodeType":"214","endLine":148,"endColumn":17,"suggestions":"219"},{"ruleId":"208","severity":1,"message":"220","line":18,"column":12,"nodeType":"210","messageId":"211","endLine":18,"endColumn":16},{"ruleId":"208","severity":1,"message":"221","line":47,"column":13,"nodeType":"210","messageId":"211","endLine":47,"endColumn":22},{"ruleId":"212","severity":1,"message":"222","line":62,"column":7,"nodeType":"214","endLine":62,"endColumn":9,"suggestions":"223"},{"ruleId":"212","severity":1,"message":"222","line":80,"column":7,"nodeType":"214","endLine":80,"endColumn":9,"suggestions":"224"},{"ruleId":"225","severity":1,"message":"226","line":100,"column":19,"nodeType":"227","endLine":100,"endColumn":78},{"ruleId":"225","severity":1,"message":"226","line":103,"column":19,"nodeType":"227","endLine":103,"endColumn":64},{"ruleId":"228","severity":1,"message":"229","line":107,"column":21,"nodeType":"227","messageId":"230","endLine":107,"endColumn":95,"fix":"231"},{"ruleId":"212","severity":1,"message":"232","line":58,"column":6,"nodeType":"214","endLine":58,"endColumn":23,"suggestions":"233"},{"ruleId":"208","severity":1,"message":"234","line":8,"column":8,"nodeType":"210","messageId":"211","endLine":8,"endColumn":12},{"ruleId":"208","severity":1,"message":"235","line":17,"column":23,"nodeType":"210","messageId":"211","endLine":17,"endColumn":37},{"ruleId":"212","severity":1,"message":"236","line":47,"column":8,"nodeType":"214","endLine":47,"endColumn":21,"suggestions":"237"},{"ruleId":"225","severity":1,"message":"226","line":22,"column":13,"nodeType":"227","endLine":22,"endColumn":66},{"ruleId":"208","severity":1,"message":"238","line":1,"column":17,"nodeType":"210","messageId":"211","endLine":1,"endColumn":26},{"ruleId":"208","severity":1,"message":"239","line":34,"column":13,"nodeType":"210","messageId":"211","endLine":34,"endColumn":29},{"ruleId":"208","severity":1,"message":"240","line":38,"column":13,"nodeType":"210","messageId":"211","endLine":38,"endColumn":25},{"ruleId":"208","severity":1,"message":"241","line":39,"column":13,"nodeType":"210","messageId":"211","endLine":39,"endColumn":30},{"ruleId":"208","severity":1,"message":"242","line":43,"column":13,"nodeType":"210","messageId":"211","endLine":43,"endColumn":21},{"ruleId":"208","severity":1,"message":"243","line":44,"column":13,"nodeType":"210","messageId":"211","endLine":44,"endColumn":26},{"ruleId":"208","severity":1,"message":"244","line":7,"column":16,"nodeType":"210","messageId":"211","endLine":7,"endColumn":23},{"ruleId":"208","severity":1,"message":"245","line":1,"column":10,"nodeType":"210","messageId":"211","endLine":1,"endColumn":18},{"ruleId":"246","severity":1,"message":"247","line":70,"column":14,"nodeType":"248","messageId":"249","endLine":70,"endColumn":16},{"ruleId":"208","severity":1,"message":"245","line":1,"column":17,"nodeType":"210","messageId":"211","endLine":1,"endColumn":25},{"ruleId":"246","severity":1,"message":"250","line":60,"column":23,"nodeType":"248","messageId":"249","endLine":60,"endColumn":25},{"ruleId":"212","severity":1,"message":"251","line":63,"column":5,"nodeType":"214","endLine":63,"endColumn":19,"suggestions":"252"},{"ruleId":"225","severity":1,"message":"226","line":95,"column":11,"nodeType":"227","endLine":95,"endColumn":87},{"ruleId":"228","severity":1,"message":"229","line":107,"column":15,"nodeType":"227","messageId":"230","endLine":107,"endColumn":65,"fix":"253"},{"ruleId":"208","severity":1,"message":"254","line":7,"column":11,"nodeType":"210","messageId":"211","endLine":7,"endColumn":19},{"ruleId":"208","severity":1,"message":"234","line":6,"column":8,"nodeType":"210","messageId":"211","endLine":6,"endColumn":12},{"ruleId":"212","severity":1,"message":"255","line":35,"column":8,"nodeType":"214","endLine":35,"endColumn":23,"suggestions":"256"},{"ruleId":"225","severity":1,"message":"226","line":44,"column":13,"nodeType":"227","endLine":44,"endColumn":34},{"ruleId":"212","severity":1,"message":"257","line":52,"column":6,"nodeType":"214","endLine":52,"endColumn":20,"suggestions":"258"},{"ruleId":"212","severity":1,"message":"259","line":100,"column":6,"nodeType":"214","endLine":100,"endColumn":20,"suggestions":"260"},{"ruleId":"208","severity":1,"message":"245","line":1,"column":17,"nodeType":"210","messageId":"211","endLine":1,"endColumn":25},{"ruleId":"208","severity":1,"message":"238","line":2,"column":10,"nodeType":"210","messageId":"211","endLine":2,"endColumn":19},{"ruleId":"208","severity":1,"message":"261","line":3,"column":8,"nodeType":"210","messageId":"211","endLine":3,"endColumn":13},{"ruleId":"208","severity":1,"message":"254","line":6,"column":11,"nodeType":"210","messageId":"211","endLine":6,"endColumn":19},{"ruleId":"208","severity":1,"message":"238","line":2,"column":17,"nodeType":"210","messageId":"211","endLine":2,"endColumn":26},"no-unused-vars","'grid' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'selectedSpots'. Either include it or remove the dependency array.","ArrayExpression",["262"],["263"],["264"],"React Hook useEffect has a missing dependency: 'timeStamp'. Either include it or remove the dependency array.",["265"],"'tide' is assigned a value but never used.","'delayTide' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'selectedSpots.latitude' and 'selectedSpots.longitude'. Either include them or remove the dependency array.",["266"],["267"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"268","text":"269"},"React Hook useEffect has missing dependencies: 'timeStampIndex' and 'winddirection_10m'. Either include them or remove the dependency array.",["270"],"'vent' is defined but never used.","'setweatherCode' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'weatherCode'. Either include it or remove the dependency array.",["271"],"'useEffect' is defined but never used.","'currentTideIndex' is assigned a value but never used.","'previousTide' is assigned a value but never used.","'previousTideIndex' is assigned a value but never used.","'nextTide' is assigned a value but never used.","'nextTideIndex' is assigned a value but never used.","'setName' is assigned a value but never used.","'useState' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","React Hook useEffect has missing dependencies: 'allSpots', 'onLoadAllSpots', 'searchActive', 'selectedSpots', and 'setSelectedSpots'. Either include them or remove the dependency array.",["272"],{"range":"273","text":"269"},"'tideTime' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'meteoIcon'. Either include it or remove the dependency array.",["274"],"React Hook useEffect has missing dependencies: 'hoursShowed', 'index', and 'waveHeightByDay'. Either include them or remove the dependency array.",["275"],"React Hook useEffect has missing dependencies: 'hoursShowed', 'index', and 'waveDirectionByDay'. Either include them or remove the dependency array.",["276"],"'axios' is defined but never used.",{"desc":"277","fix":"278"},{"desc":"277","fix":"279"},{"desc":"277","fix":"280"},{"desc":"281","fix":"282"},{"desc":"283","fix":"284"},{"desc":"283","fix":"285"},[4533,4533]," rel=\"noreferrer\"",{"desc":"286","fix":"287"},{"desc":"288","fix":"289"},{"desc":"290","fix":"291"},[3720,3720],{"desc":"292","fix":"293"},{"desc":"294","fix":"295"},{"desc":"296","fix":"297"},"Update the dependencies array to be: [selectedSpots]",{"range":"298","text":"299"},{"range":"300","text":"299"},{"range":"301","text":"299"},"Update the dependencies array to be: [timeStamp, wind.time]",{"range":"302","text":"303"},"Update the dependencies array to be: [selectedSpots.latitude, selectedSpots.longitude]",{"range":"304","text":"305"},{"range":"306","text":"305"},"Update the dependencies array to be: [onLoadOpenMeteo, timeStampIndex, winddirection_10m]",{"range":"307","text":"308"},"Update the dependencies array to be: [onLoadMeteo, weatherCode]",{"range":"309","text":"310"},"Update the dependencies array to be: [allSpots, currentSpots, onLoadAllSpots, searchActive, selectedSpots, setSelectedSpots]",{"range":"311","text":"312"},"Update the dependencies array to be: [meteoIcon, onLoadMeteo3D]",{"range":"313","text":"314"},"Update the dependencies array to be: [hoursShowed, index, onLoadMarine, waveHeightByDay]",{"range":"315","text":"316"},"Update the dependencies array to be: [hoursShowed, index, onLoadMarine, waveDirectionByDay]",{"range":"317","text":"318"},[3209,3211],"[selectedSpots]",[3722,3724],[4274,4276],[4543,4554],"[timeStamp, wind.time]",[2262,2264],"[selectedSpots.latitude, selectedSpots.longitude]",[3274,3276],[1752,1769],"[onLoadOpenMeteo, timeStampIndex, winddirection_10m]",[1965,1978],"[onLoadMeteo, weatherCode]",[2267,2281],"[allSpots, currentSpots, onLoadAllSpots, searchActive, selectedSpots, setSelectedSpots]",[1337,1352],"[meteoIcon, onLoadMeteo3D]",[1628,1642],"[hoursShowed, index, onLoadMarine, waveHeightByDay]",[3149,3163],"[hoursShowed, index, onLoadMarine, waveDirectionByDay]"]