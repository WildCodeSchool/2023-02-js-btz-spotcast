{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ericg\\\\OneDrive\\\\Bureau\\\\Pro\\\\Code\\\\Projet-2-SpotCast\\\\2023-02-js-btz-spotcast\\\\client\\\\src\\\\pages\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { createContext } from 'react';\nimport Wind from \"../components/widgets/wind/Wind\";\nimport MeteoDay from \"../components/widgets/meteo-day/MeteoDay\";\nimport MeteoThreeDay from \"../components/widgets/meteo-three-day/MeteoThreeDay\";\nimport NavBar from \"../components/widgets/navbar/NavBar\";\nimport ForecastCardBackground from \"../components/forecast-cards/ForecastCardBackground\";\nimport \"./Dashboard.css\";\nimport Tide from \"../components/widgets/tide/Tide\";\nimport Sunset from \"../components/widgets/sunset/Sunset\";\nimport Muuri from 'muuri';\nimport Login from '../../src/components/widgets/login/Login';\nimport Register from '../../src/components/widgets/login/Register';\n\n// instancier un useContext\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const selectedSpotsContext = /*#__PURE__*/createContext();\nconst Dashboard = () => {\n  _s();\n  //setting up the Muuri effect\n  const [grid, setGrid] = useState();\n  useEffect(() => {\n    setGrid(new Muuri('.grid', {\n      dragEnabled: true,\n      layoutDuration: 300,\n      layoutEasing: 'ease',\n      fillGaps: true,\n      sortData: {\n        id: function (item, element) {\n          return element.children[0].id;\n        }\n      }\n    }));\n  }, []);\n  // debugger\n  grid && console.log(grid._items[0]);\n  //setting up Selected Spot \n  const [selectedSpots, setSelectedSpots] = useState([{\n    id: 0,\n    name: \"Biarritz - La CÃ´te des Basques\",\n    latitude: \"43.48\",\n    longitude: \"-1.56\",\n    webcam: \"https://gosurf.fr/webcam/fr/7/Biarritz-La-Cote-des-Basques\"\n  }]);\n\n  //useState to check when the Open-Meteo API is loaded\n  const [onLoadOpenMeteo, setOnLoadOpenMeteo] = useState(true);\n\n  //Setting up a realtime clock\n  const [date, setDate] = useState(new Date());\n\n  //getting time and date every hour\n  useEffect(() => {\n    const timer = setInterval(() => setDate(new Date()), 3600000);\n    return function () {\n      clearInterval(timer);\n    };\n  });\n\n  //creating a time stamp written as the one in the API\n  const timeStamp = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, \"0\")}-${String(date.getDate()).padStart(2, \"0\")}T${String(date.getHours()).padStart(2, \"0\")}:00`;\n\n  //fetching the wind infos\n  const [wind, setWind] = useState([]);\n  useEffect(() => {\n    axios.get(`https://api.open-meteo.com/v1/gfs?latitude=${selectedSpots[0].latitude}&longitude=${selectedSpots[0].longitude}&hourly=windspeed_10m,winddirection_10m&timezone=Europe%2FBerlin`).then(res => res.data).then(data => {\n      setWind(data.hourly);\n      setOnLoadOpenMeteo(false);\n    });\n  }, []);\n\n  //fetching the meteo infos\n  const [meteo, setMeteo] = useState([]);\n  const [onLoadMeteo, setOnLoadMeteo] = useState(true);\n  useEffect(() => {\n    axios.get(`https://api.open-meteo.com/v1/gfs?latitude=${selectedSpots[0].latitude}&longitude=${selectedSpots[0].longitude}&hourly=temperature_2m,weathercode&timezone=Europe%2FBerlin`).then(res => res.data).then(data => {\n      setMeteo(data.hourly);\n      setOnLoadMeteo(false);\n    });\n  }, []);\n\n  //fetching meteo infos at 3 day.\n  const [meteo3D, setMeteo3D] = useState([]);\n  const [onLoadMeteo3D, setOnLoadMeteo3D] = useState(true);\n  useEffect(() => {\n    axios.get(`https://api.open-meteo.com/v1/gfs?latitude=${selectedSpots[0].latitude}&longitude=${selectedSpots[0].longitude}&daily=weathercode,temperature_2m_max,temperature_2m_min&timezone=Europe%2FBerlin`).then(res => res.data).then(data => {\n      setMeteo3D(data.daily);\n      setOnLoadMeteo3D(false);\n    });\n  }, []);\n\n  //getting the index of current time in API array\n  const [timeStampIndex, setTimeStampIndex] = useState('');\n  useEffect(() => {\n    wind.time &&\n    //checking if 'wind.time' is already loaded\n    setTimeStampIndex(wind.time.indexOf(timeStamp));\n  }, [wind.time]); //setup timeStampIndex after ' wind.time' is updated\n\n  // all the UseStates for login popup\n  const [currentForm, setCurrentForm] = useState('login');\n  const [currentUserName, setCurrentUserName] = useState('Doudou');\n  const [currentUserPicture, setCurrentUserPicture] = useState('https://i.pinimg.com/originals/f9/9c/f1/f99cf1db89af1ea64a7085eca75d98b2.jpg');\n  const toggleForm = formName => {\n    setCurrentForm(formName);\n    setEmail(\"\");\n    setPass(\"\");\n    setError(\"\");\n  };\n  const toggleModal = () => {\n    setShow(!show);\n    setEmail('');\n    setPass('');\n    setError('');\n  };\n  const [show, setShow] = useState(true);\n  const [email, setEmail] = useState(\"\");\n  const [pass, setPass] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: /*#__PURE__*/_jsxDEV(selectedSpotsContext.Provider, {\n      value: [selectedSpots, setSelectedSpots],\n      children: [currentForm === 'login' ? /*#__PURE__*/_jsxDEV(Login, {\n        toggleModal: toggleModal,\n        setCurrentUserName: setCurrentUserName,\n        setCurrentUserPicture: setCurrentUserPicture,\n        onFormSwitch: toggleForm,\n        show: show,\n        setShow: setShow,\n        email: email,\n        setEmail: setEmail,\n        pass: pass,\n        setPass: setPass,\n        error: error,\n        setError: setError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        toggleModal: toggleModal,\n        show: show,\n        setShow: setShow,\n        onFormSwitch: toggleForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: show ? 'overlay-modal invisible' : 'overlay-modal',\n        onClick: toggleModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NavBar, {\n        setShow: setShow,\n        show: show,\n        currentUserName: currentUserName,\n        currentUserPicture: currentUserPicture\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item\",\n          children: /*#__PURE__*/_jsxDEV(Wind, {\n            ...wind,\n            timeStampIndex: timeStampIndex,\n            onLoadOpenMeteo: onLoadOpenMeteo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item\",\n          children: /*#__PURE__*/_jsxDEV(Tide, {\n            date: date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item\",\n          children: /*#__PURE__*/_jsxDEV(MeteoDay, {\n            ...meteo,\n            onLoadMeteo: onLoadMeteo,\n            timeStampIndex: timeStampIndex\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item\",\n          children: /*#__PURE__*/_jsxDEV(MeteoThreeDay, {\n            meteo3D: meteo3D,\n            onLoadMeteo3D: onLoadMeteo3D\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), selectedSpots.map(selectedSpots => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item\",\n          children: /*#__PURE__*/_jsxDEV(ForecastCardBackground, {\n            selectedSpots: selectedSpots,\n            timeStamp: timeStamp\n          }, selectedSpots.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item\",\n          children: /*#__PURE__*/_jsxDEV(Sunset, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"Qrqyejkb0NKTQmZaDfdKF5l/Y8k=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","axios","createContext","Wind","MeteoDay","MeteoThreeDay","NavBar","ForecastCardBackground","Tide","Sunset","Muuri","Login","Register","jsxDEV","_jsxDEV","selectedSpotsContext","Dashboard","_s","grid","setGrid","dragEnabled","layoutDuration","layoutEasing","fillGaps","sortData","id","item","element","children","console","log","_items","selectedSpots","setSelectedSpots","name","latitude","longitude","webcam","onLoadOpenMeteo","setOnLoadOpenMeteo","date","setDate","Date","timer","setInterval","clearInterval","timeStamp","getFullYear","String","getMonth","padStart","getDate","getHours","wind","setWind","get","then","res","data","hourly","meteo","setMeteo","onLoadMeteo","setOnLoadMeteo","meteo3D","setMeteo3D","onLoadMeteo3D","setOnLoadMeteo3D","daily","timeStampIndex","setTimeStampIndex","time","indexOf","currentForm","setCurrentForm","currentUserName","setCurrentUserName","currentUserPicture","setCurrentUserPicture","toggleForm","formName","setEmail","setPass","setError","toggleModal","setShow","show","email","pass","error","className","Provider","value","onFormSwitch","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","_c","$RefreshReg$"],"sources":["C:/Users/ericg/OneDrive/Bureau/Pro/Code/Projet-2-SpotCast/2023-02-js-btz-spotcast/client/src/pages/Dashboard.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { createContext } from 'react';\r\nimport Wind from \"../components/widgets/wind/Wind\";\r\nimport MeteoDay from \"../components/widgets/meteo-day/MeteoDay\"\r\nimport MeteoThreeDay from \"../components/widgets/meteo-three-day/MeteoThreeDay\"\r\nimport NavBar from \"../components/widgets/navbar/NavBar\"\r\nimport ForecastCardBackground from \"../components/forecast-cards/ForecastCardBackground\";\r\nimport \"./Dashboard.css\";\r\nimport Tide from \"../components/widgets/tide/Tide\";\r\nimport Sunset from \"../components/widgets/sunset/Sunset\";\r\nimport Muuri from 'muuri';\r\nimport Login from '../../src/components/widgets/login/Login';\r\nimport Register from '../../src/components/widgets/login/Register';\r\n\r\n\r\n// instancier un useContext\r\nexport const selectedSpotsContext = createContext();\r\n\r\n\r\nconst Dashboard = () => {\r\n\r\n  //setting up the Muuri effect\r\n  const [grid, setGrid] = useState();\r\n\r\n  useEffect(() => {\r\n    setGrid(\r\n      new Muuri('.grid', {\r\n        dragEnabled: true,\r\n        layoutDuration: 300,\r\n        layoutEasing: 'ease',\r\n        fillGaps: true,\r\n        sortData: {\r\n          id: function(item, element) {\r\n            return element.children[0].id;\r\n          }\r\n        }\r\n      })\r\n    );\r\n  }, []);\r\n  // debugger\r\n  grid && console.log(grid._items[0]);\r\n  //setting up Selected Spot \r\n  const [selectedSpots, setSelectedSpots] = useState(\r\n    [{\r\n    id : 0,\r\n    name : \"Biarritz - La CÃ´te des Basques\",\r\n    latitude : \"43.48\",\r\n    longitude : \"-1.56\",\r\n    webcam : \"https://gosurf.fr/webcam/fr/7/Biarritz-La-Cote-des-Basques\"\r\n    }\r\n  ]);\r\n\r\n  //useState to check when the Open-Meteo API is loaded\r\n  const [onLoadOpenMeteo, setOnLoadOpenMeteo] = useState(true);\r\n\r\n  //Setting up a realtime clock\r\n  const [date, setDate] = useState(new Date());\r\n\r\n  //getting time and date every hour\r\n  useEffect(() => {\r\n    const timer = setInterval(() => setDate(new Date()), 3600000);\r\n    return function () {\r\n      clearInterval(timer);\r\n    };\r\n  });\r\n\r\n  //creating a time stamp written as the one in the API\r\n  const timeStamp = \r\n  `${date.getFullYear()}-${String(date.getMonth() +1).padStart(2,\"0\")}-${String(date.getDate()).padStart(2,\"0\")}T${String(date.getHours()).padStart(2,\"0\")}:00`;\r\n\r\n  //fetching the wind infos\r\n  const [wind, setWind] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `https://api.open-meteo.com/v1/gfs?latitude=${selectedSpots[0].latitude}&longitude=${selectedSpots[0].longitude}&hourly=windspeed_10m,winddirection_10m&timezone=Europe%2FBerlin`\r\n      )\r\n      .then((res) => res.data)\r\n      .then((data) => {\r\n        setWind(data.hourly);\r\n        setOnLoadOpenMeteo(false);\r\n      });\r\n  }, []);\r\n\r\n  //fetching the meteo infos\r\n  const [meteo, setMeteo] = useState([]);\r\n  const [onLoadMeteo, setOnLoadMeteo] = useState(true);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `https://api.open-meteo.com/v1/gfs?latitude=${selectedSpots[0].latitude}&longitude=${selectedSpots[0].longitude}&hourly=temperature_2m,weathercode&timezone=Europe%2FBerlin`\r\n      )\r\n      .then((res) => res.data)\r\n      .then((data) => {\r\n        setMeteo(data.hourly);\r\n        setOnLoadMeteo(false);\r\n      });\r\n  }, []);\r\n\r\n  //fetching meteo infos at 3 day.\r\n  const [meteo3D, setMeteo3D] = useState([]);\r\n  const [onLoadMeteo3D, setOnLoadMeteo3D] = useState(true);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `https://api.open-meteo.com/v1/gfs?latitude=${selectedSpots[0].latitude}&longitude=${selectedSpots[0].longitude}&daily=weathercode,temperature_2m_max,temperature_2m_min&timezone=Europe%2FBerlin`\r\n      )\r\n      .then((res) => res.data)\r\n      .then((data) => {\r\n        setMeteo3D(data.daily);\r\n        setOnLoadMeteo3D(false);\r\n      });\r\n  }, []);\r\n\r\n\r\n  //getting the index of current time in API array\r\n  const [timeStampIndex, setTimeStampIndex] = useState('');\r\n\r\n  useEffect(() => {\r\n    wind.time && //checking if 'wind.time' is already loaded\r\n      setTimeStampIndex(wind.time.indexOf(timeStamp));\r\n  }, [wind.time]); //setup timeStampIndex after ' wind.time' is updated\r\n\r\n  // all the UseStates for login popup\r\n  const [currentForm, setCurrentForm] = useState('login');\r\n  const [currentUserName, setCurrentUserName] = useState('Doudou');\r\n  const [currentUserPicture, setCurrentUserPicture] = useState(\r\n    'https://i.pinimg.com/originals/f9/9c/f1/f99cf1db89af1ea64a7085eca75d98b2.jpg'\r\n  );\r\n\r\n  const toggleForm = (formName) => {\r\n    setCurrentForm(formName);\r\n    setEmail(\"\");\r\n    setPass(\"\");\r\n    setError(\"\");\r\n  };\r\n\r\n  const toggleModal = () => {\r\n    setShow(!show);\r\n    setEmail('');\r\n    setPass('');\r\n    setError('');\r\n  };\r\n\r\n  const [show, setShow] = useState(true);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [pass, setPass] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <selectedSpotsContext.Provider value={[selectedSpots, setSelectedSpots] }>\r\n        {currentForm === 'login' ? (\r\n          <Login\r\n            toggleModal={toggleModal}\r\n            setCurrentUserName={setCurrentUserName}\r\n            setCurrentUserPicture={setCurrentUserPicture}\r\n            onFormSwitch={toggleForm}\r\n            show={show}\r\n            setShow={setShow}\r\n            email={email}\r\n            setEmail={setEmail}\r\n            pass={pass}\r\n            setPass={setPass}\r\n            error={error}\r\n            setError={setError}\r\n          />\r\n        ) : (\r\n          <Register\r\n            toggleModal={toggleModal}\r\n            show={show}\r\n            setShow={setShow}\r\n            onFormSwitch={toggleForm}\r\n          />\r\n        )}\r\n        <div className={show ? 'overlay-modal invisible' : 'overlay-modal'}\r\n          onClick={toggleModal}>\r\n        </div>\r\n        <NavBar\r\n          setShow={setShow}\r\n          show={show}\r\n          currentUserName={currentUserName}\r\n          currentUserPicture={currentUserPicture}\r\n        />\r\n        <div className=\"grid\">\r\n          <div className=\"item\">\r\n            <Wind\r\n              {...wind}\r\n              timeStampIndex={timeStampIndex}\r\n              onLoadOpenMeteo = {onLoadOpenMeteo}\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"item\">\r\n            <Tide\r\n              date={date}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"item\">\r\n            <MeteoDay\r\n            {...meteo}\r\n            onLoadMeteo={onLoadMeteo}\r\n            timeStampIndex={timeStampIndex}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"item\">\r\n            <MeteoThreeDay\r\n            meteo3D={meteo3D}\r\n            onLoadMeteo3D={onLoadMeteo3D}\r\n            />\r\n          </div>\r\n\r\n          {selectedSpots.map(selectedSpots => (\r\n            <div className=\"item\">\r\n              <ForecastCardBackground\r\n              key={selectedSpots.id}\r\n              selectedSpots={selectedSpots}\r\n              timeStamp={timeStamp}\r\n              />\r\n            </div>\r\n          ))}\r\n          <div className=\"item\">\r\n            <Sunset />\r\n          </div>\r\n      </div>\r\n    </selectedSpotsContext.Provider>\r\n  </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}