{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ericg\\\\OneDrive\\\\Bureau\\\\Pro\\\\Code\\\\Projet-2-SpotCast\\\\2023-02-js-btz-spotcast\\\\client\\\\src\\\\components\\\\widgets\\\\meteo-three-day\\\\MeteoThreeDay.jsx\";\nimport IconMeteoThreeDays from \"./components/IconMeteoThreeDays\";\nimport DateThreeDays from \"./components/DateThreeDays\";\nimport TempThreeDays from \"./components/TempThreeDays\";\nimport ToggleButton from \"../../utilities/ToggleButton\";\nimport { v4 as uuidv4 } from 'uuid';\nimport \"../cards.css\";\nimport \"./MeteoThreeDay.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MeteoThreeDay = _ref => {\n  let {\n    meteo3D,\n    onLoadMeteo3D\n  } = _ref;\n  // Setup the date\n  const today = new Date(); // Obtenir la date et l'heure actuelles\n  const oneDay = 24 * 60 * 60 * 1000; // Durée en millisecondes d'un jour\n  const tomorrow = new Date(today.getTime() + oneDay); // Obtenir la date de demain\n  const afterTomorrow = new Date(today.getTime() + 2 * oneDay); // Obtenir la date d'après-demain\n  const dPlus3 = new Date(today.getTime() + 3 * oneDay); // Obtenir la date D+3\n  const options = {\n    weekday: 'long',\n    day: '2-digit'\n  }; // Options pour formater la date\n\n  // // Format date  in \"DD/MM\"\n  const formattedTomorrow = tomorrow.toLocaleDateString('fr-FR', options);\n  const formattedAfterTomorrow = afterTomorrow.toLocaleDateString('fr-FR', options);\n  const formattedDPlus3 = dPlus3.toLocaleDateString('fr-FR', options);\n  let indexInfoMeteo = [];\n  if (onLoadMeteo3D) {} else {\n    indexInfoMeteo = [{\n      date: formattedTomorrow,\n      weatherCode: meteo3D.weathercode[1],\n      temperature: (meteo3D.temperature_2m_min[1] + meteo3D.temperature_2m_max[1]) / 2\n    }, {\n      date: formattedAfterTomorrow,\n      weatherCode: meteo3D.weathercode[2],\n      temperature: (meteo3D.temperature_2m_min[2] + meteo3D.temperature_2m_max[2]) / 2\n    }, {\n      date: formattedDPlus3,\n      weatherCode: meteo3D.weathercode[3],\n      temperature: (meteo3D.temperature_2m_min[3] + meteo3D.temperature_2m_max[3]) / 2\n    }];\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"small-square item-content\",\n    id: \"D\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-title\",\n        children: \"Meteo 3 days\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-content meteo-infos-3d\",\n      children: onLoadMeteo3D ? \"\" : indexInfoMeteo.map(el => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"day-infos-3d\",\n        children: [/*#__PURE__*/_jsxDEV(DateThreeDays, {\n          meteoDay: el.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(IconMeteoThreeDays, {\n          meteoIcon: el.weatherCode,\n          onLoadMeteo3D: onLoadMeteo3D\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(TempThreeDays, {\n          tempDay: el.temperature\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 29\n        }, this)]\n      }, uuidv4(), true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_c = MeteoThreeDay;\nexport default MeteoThreeDay;\nvar _c;\n$RefreshReg$(_c, \"MeteoThreeDay\");","map":{"version":3,"names":["IconMeteoThreeDays","DateThreeDays","TempThreeDays","ToggleButton","v4","uuidv4","jsxDEV","_jsxDEV","MeteoThreeDay","_ref","meteo3D","onLoadMeteo3D","today","Date","oneDay","tomorrow","getTime","afterTomorrow","dPlus3","options","weekday","day","formattedTomorrow","toLocaleDateString","formattedAfterTomorrow","formattedDPlus3","indexInfoMeteo","date","weatherCode","weathercode","temperature","temperature_2m_min","temperature_2m_max","className","id","children","fileName","_jsxFileName","lineNumber","columnNumber","map","el","meteoDay","meteoIcon","tempDay","_c","$RefreshReg$"],"sources":["C:/Users/ericg/OneDrive/Bureau/Pro/Code/Projet-2-SpotCast/2023-02-js-btz-spotcast/client/src/components/widgets/meteo-three-day/MeteoThreeDay.jsx"],"sourcesContent":["import IconMeteoThreeDays from \"./components/IconMeteoThreeDays\";\r\nimport DateThreeDays from \"./components/DateThreeDays\";\r\nimport TempThreeDays from \"./components/TempThreeDays\";\r\nimport ToggleButton from \"../../utilities/ToggleButton\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport \"../cards.css\";\r\nimport \"./MeteoThreeDay.css\";\r\n\r\nconst MeteoThreeDay = ({ meteo3D, onLoadMeteo3D }) => {\r\n\r\n    // Setup the date\r\n    const today = new Date();  // Obtenir la date et l'heure actuelles\r\n    const oneDay = 24 * 60 * 60 * 1000;  // Durée en millisecondes d'un jour\r\n    const tomorrow = new Date(today.getTime() + oneDay);  // Obtenir la date de demain\r\n    const afterTomorrow = new Date(today.getTime() + (2 * oneDay));  // Obtenir la date d'après-demain\r\n    const dPlus3 = new Date(today.getTime() + (3 * oneDay));  // Obtenir la date D+3\r\n    const options = { weekday: 'long', day: '2-digit' };  // Options pour formater la date\r\n\r\n    // // Format date  in \"DD/MM\"\r\n    const formattedTomorrow = tomorrow.toLocaleDateString('fr-FR', options);\r\n    const formattedAfterTomorrow = afterTomorrow.toLocaleDateString('fr-FR', options);\r\n    const formattedDPlus3 = dPlus3.toLocaleDateString('fr-FR', options);\r\n\r\n    let indexInfoMeteo = []\r\n    if (onLoadMeteo3D) {\r\n    } else {\r\n        indexInfoMeteo = [{\r\n            date: formattedTomorrow,\r\n            weatherCode: meteo3D.weathercode[1],\r\n            temperature: ((meteo3D.temperature_2m_min[1] + meteo3D.temperature_2m_max[1]) / 2)\r\n        },\r\n        {\r\n            date: formattedAfterTomorrow,\r\n            weatherCode: meteo3D.weathercode[2],\r\n            temperature: ((meteo3D.temperature_2m_min[2] + meteo3D.temperature_2m_max[2]) / 2)\r\n        },\r\n        {\r\n            date: formattedDPlus3,\r\n            weatherCode: meteo3D.weathercode[3],\r\n            temperature: ((meteo3D.temperature_2m_min[3] + meteo3D.temperature_2m_max[3]) / 2)\r\n        }]\r\n    }\r\n\r\n    return (\r\n        <div className=\"small-square item-content\" id=\"D\">\r\n            <div className=\"card-header\">\r\n                <p className=\"card-title\">Meteo 3 days</p>\r\n                <ToggleButton />\r\n            </div>\r\n            <div className=\"card-content meteo-infos-3d\">\r\n                {onLoadMeteo3D ? \"\" :\r\n                    indexInfoMeteo.map((el) => (\r\n                        <div key ={uuidv4()} className=\"day-infos-3d\">\r\n                           \r\n                            <DateThreeDays\r\n                                meteoDay={el.date}\r\n                            />\r\n\r\n                            <IconMeteoThreeDays \r\n                                meteoIcon={el.weatherCode}\r\n                                onLoadMeteo3D={onLoadMeteo3D}\r\n                            />\r\n\r\n                            <TempThreeDays\r\n                                tempDay={el.temperature}\r\n                            />\r\n\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MeteoThreeDay"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}