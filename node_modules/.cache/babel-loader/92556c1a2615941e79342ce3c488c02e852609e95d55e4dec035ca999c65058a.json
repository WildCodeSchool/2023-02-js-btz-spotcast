{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ericg\\\\OneDrive\\\\Bureau\\\\Pro\\\\Code\\\\Projet-2-SpotCast\\\\2023-02-js-btz-spotcast\\\\src\\\\components\\\\forecast-cards\\\\ForecastCardBackground.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport ToggleButton from '../utilities/ToggleButton';\nimport './ForecastCardBackground.css';\nimport ForecastCardExtended from './forecast-card-extended/ForecastCardExtended';\nimport ForecastCardMinified from './forecast-card-minified/ForecastCardMinified';\nimport stars from '../../assets/etoile-32px.png';\nimport localisation from '../../assets/marqueur-32px.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForecastCardBackground = _ref => {\n  _s();\n  let {\n    currentSpot,\n    date\n  } = _ref;\n  // Contient les donnés API\n  const [tide, setTide] = useState([]);\n  const [surfDataWind, setSurfDataWind] = useState([]);\n  const [surfDataHoule, setSurfDataHoule] = useState([]);\n  useEffect(() => {\n    // API TIDE récupère la marée haute et basse sur 10jours mais attentions car que 10 fetch par jous donc delay de 3h appliqué\n    const delayTide = setTimeout(() => {\n      axios.get(`https://api.stormglass.io/v2/tide/extremes/point?lat=${currentSpot.latitude}&lng=${currentSpot.longitude}&start=2023-04-19&end=2023-04-29`, {\n        headers: {\n          'Authorization': 'ed2bcc96-ddf7-11ed-92e6-0242ac130002-ed2bcd72-ddf7-11ed-92e6-0242ac130002'\n        }\n      }).then(res => res.data).then(data => {\n        setTide(data);\n      });\n    }, 3 * 60 * 60 * 1000);\n  }, []);\n  console.log(tide);\n  useEffect(() => {\n    // API VENT( Orientation vent, Puissance en hourly et Daily sur 7 jours)\n    axios.get(`https://api.open-meteo.com/v1/forecast?latitude=${currentSpot.latitude}&longitude=${currentSpot.longitude}&hourly=windspeed_10m&daily=windspeed_10m_max,winddirection_10m_dominant&timezone=Europe%2FBerlin`).then(req => req.data).then(data => {\n      setSurfDataWind(data);\n    });\n\n    // API HOULE (Hourly : Wave height et wave period / Daily : Wave height Max et Wave direction dominant)\n    axios.get(`https://marine-api.open-meteo.com/v1/marine?latitude=${currentSpot.latitude}&longitude=${currentSpot.longitude}&hourly=wave_height,wave_period&daily=wave_height_max,wave_direction_dominant&timezone=Europe%2FBerlin`).then(req => req.data).then(data => {\n      setSurfDataHoule(data);\n    });\n  }, []);\n  const today = {\n    date\n  }; // Créer un objet Date avec la date et l'heure actuelles\n  const options = {\n    weekday: 'long',\n    day: '2-digit'\n  }; // affiche le jours en long et la date en chiffres\n  const oneDay = 24 * 60 * 60 * 1000; // durée de 24h\n  const dayForecast = []; // array qui receveras les dates\n\n  // boucle qui génère automatiquement les 7 prochains jours\n  for (let i = 0; i < 7; i++) {\n    dayForecast.push(new Date({\n      date\n    }.getTime() + i * oneDay).toLocaleDateString('fr-FR', options));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"background-forcast\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flexSpotName\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"spotName\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"spotNameLocalisation\",\n              src: localisation\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 19\n            }, this), currentSpot.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"spotNameStars\",\n            src: stars\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"spotNameWebcam\",\n          href: currentSpot.webcam,\n          target: \"_blank\",\n          children: \"Acceder \\xE0 la webcam\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(ToggleButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bodyForecastCard\",\n      children: dayForecast.map(el => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: el\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ForecastCardMinified, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ForecastCardExtended, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(ForecastCardBackground, \"uZAj1PBTpeRFhJHLgrJQDIVI56g=\");\n_c = ForecastCardBackground;\nexport default ForecastCardBackground;\nvar _c;\n$RefreshReg$(_c, \"ForecastCardBackground\");","map":{"version":3,"names":["React","axios","useState","useEffect","ToggleButton","ForecastCardExtended","ForecastCardMinified","stars","localisation","jsxDEV","_jsxDEV","ForecastCardBackground","_ref","_s","currentSpot","date","tide","setTide","surfDataWind","setSurfDataWind","surfDataHoule","setSurfDataHoule","delayTide","setTimeout","get","latitude","longitude","headers","then","res","data","console","log","req","today","options","weekday","day","oneDay","dayForecast","i","push","Date","getTime","toLocaleDateString","className","children","src","fileName","_jsxFileName","lineNumber","columnNumber","name","href","webcam","target","map","el","_c","$RefreshReg$"],"sources":["C:/Users/ericg/OneDrive/Bureau/Pro/Code/Projet-2-SpotCast/2023-02-js-btz-spotcast/src/components/forecast-cards/ForecastCardBackground.jsx"],"sourcesContent":["import React from 'react'\r\nimport axios from 'axios'\r\nimport { useState, useEffect } from 'react'\r\nimport ToggleButton from '../utilities/ToggleButton'\r\nimport './ForecastCardBackground.css'\r\n\r\nimport ForecastCardExtended from './forecast-card-extended/ForecastCardExtended'\r\nimport ForecastCardMinified from './forecast-card-minified/ForecastCardMinified'\r\nimport stars from '../../assets/etoile-32px.png'\r\nimport localisation from '../../assets/marqueur-32px.png'\r\n\r\nconst ForecastCardBackground = ({currentSpot, date}) => {\r\n    // Contient les donnés API\r\n    const [tide, setTide] = useState([])\r\n    const [surfDataWind,  setSurfDataWind] = useState([])\r\n    const [surfDataHoule, setSurfDataHoule] =useState([])\r\n\r\n    \r\n    useEffect(() => {\r\n       // API TIDE récupère la marée haute et basse sur 10jours mais attentions car que 10 fetch par jous donc delay de 3h appliqué\r\n      const delayTide = setTimeout(() => {\r\n        axios\r\n        .get(\r\n          `https://api.stormglass.io/v2/tide/extremes/point?lat=${currentSpot.latitude}&lng=${currentSpot.longitude}&start=2023-04-19&end=2023-04-29`,{\r\n          headers: {\r\n              'Authorization': 'ed2bcc96-ddf7-11ed-92e6-0242ac130002-ed2bcd72-ddf7-11ed-92e6-0242ac130002'\r\n            }}\r\n        )\r\n        .then((res) => res.data)\r\n        .then((data) => {\r\n          setTide(data);\r\n        });\r\n\r\n      }, 3*60*60*1000); \r\n\r\n    },[])\r\n\r\n    console.log(tide)\r\n\r\n      \r\n      \r\n\r\n    useEffect(() => {\r\n      // API VENT( Orientation vent, Puissance en hourly et Daily sur 7 jours)\r\n      axios.get(`https://api.open-meteo.com/v1/forecast?latitude=${currentSpot.latitude}&longitude=${currentSpot.longitude}&hourly=windspeed_10m&daily=windspeed_10m_max,winddirection_10m_dominant&timezone=Europe%2FBerlin`)\r\n        .then((req) => req.data)\r\n        .then((data) => {\r\n          setSurfDataWind(data);\r\n        });\r\n      \r\n        // API HOULE (Hourly : Wave height et wave period / Daily : Wave height Max et Wave direction dominant)\r\n      axios.get(`https://marine-api.open-meteo.com/v1/marine?latitude=${currentSpot.latitude}&longitude=${currentSpot.longitude}&hourly=wave_height,wave_period&daily=wave_height_max,wave_direction_dominant&timezone=Europe%2FBerlin`)\r\n        .then((req) => req.data)\r\n        .then((data) => {\r\n          setSurfDataHoule(data);\r\n        });\r\n      \r\n\r\n    },[])\r\n\r\n    const today = {date};  // Créer un objet Date avec la date et l'heure actuelles\r\n    const options = { weekday: 'long', day: '2-digit' }; // affiche le jours en long et la date en chiffres\r\n    const oneDay = 24 * 60 * 60 * 1000; // durée de 24h\r\n    const dayForecast = [] // array qui receveras les dates\r\n\r\n    // boucle qui génère automatiquement les 7 prochains jours\r\n    for(let i = 0; i < 7; i++){\r\n        dayForecast.push((new Date({date}.getTime() + (i * oneDay))).toLocaleDateString('fr-FR', options))\r\n    }\r\n   \r\n\r\n    \r\n  return (\r\n    <div className='background-forcast'>\r\n        <div className='header'>\r\n            <div>\r\n              <div className='flexSpotName'>\r\n                <p className='spotName'>\r\n                  <img className='spotNameLocalisation' src={localisation} />\r\n                    {currentSpot.name} \r\n                  </p>\r\n                  <img className='spotNameStars' src={stars} />\r\n                </div>\r\n              <a className='spotNameWebcam' href={currentSpot.webcam} target='_blank'>\r\n                Acceder à la webcam\r\n              </a>\r\n            </div>\r\n            <div>\r\n                <ToggleButton />\r\n            </div>\r\n        </div>\r\n        <div className='bodyForecastCard'>\r\n            {\r\n              dayForecast.map((el) => (\r\n                <div >\r\n                <p>{el}</p>\r\n                <ForecastCardMinified />\r\n                <ForecastCardExtended />\r\n                </div>\r\n              ))\r\n            }\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ForecastCardBackground"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAO,8BAA8B;AAErC,OAAOC,oBAAoB,MAAM,+CAA+C;AAChF,OAAOC,oBAAoB,MAAM,+CAA+C;AAChF,OAAOC,KAAK,MAAM,8BAA8B;AAChD,OAAOC,YAAY,MAAM,gCAAgC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,sBAAsB,GAAGC,IAAA,IAAyB;EAAAC,EAAA;EAAA,IAAxB;IAACC,WAAW;IAAEC;EAAI,CAAC,GAAAH,IAAA;EAC/C;EACA,MAAM,CAACI,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACgB,YAAY,EAAGC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACrD,MAAM,CAACkB,aAAa,EAAEC,gBAAgB,CAAC,GAAEnB,QAAQ,CAAC,EAAE,CAAC;EAGrDC,SAAS,CAAC,MAAM;IACb;IACD,MAAMmB,SAAS,GAAGC,UAAU,CAAC,MAAM;MACjCtB,KAAK,CACJuB,GAAG,CACD,wDAAuDV,WAAW,CAACW,QAAS,QAAOX,WAAW,CAACY,SAAU,kCAAiC,EAAC;QAC5IC,OAAO,EAAE;UACL,eAAe,EAAE;QACnB;MAAC,CAAC,CACL,CACAC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CACvBF,IAAI,CAAEE,IAAI,IAAK;QACdb,OAAO,CAACa,IAAI,CAAC;MACf,CAAC,CAAC;IAEJ,CAAC,EAAE,CAAC,GAAC,EAAE,GAAC,EAAE,GAAC,IAAI,CAAC;EAElB,CAAC,EAAC,EAAE,CAAC;EAELC,OAAO,CAACC,GAAG,CAAChB,IAAI,CAAC;EAKjBb,SAAS,CAAC,MAAM;IACd;IACAF,KAAK,CAACuB,GAAG,CAAE,mDAAkDV,WAAW,CAACW,QAAS,cAAaX,WAAW,CAACY,SAAU,mGAAkG,CAAC,CACrNE,IAAI,CAAEK,GAAG,IAAKA,GAAG,CAACH,IAAI,CAAC,CACvBF,IAAI,CAAEE,IAAI,IAAK;MACdX,eAAe,CAACW,IAAI,CAAC;IACvB,CAAC,CAAC;;IAEF;IACF7B,KAAK,CAACuB,GAAG,CAAE,wDAAuDV,WAAW,CAACW,QAAS,cAAaX,WAAW,CAACY,SAAU,wGAAuG,CAAC,CAC/NE,IAAI,CAAEK,GAAG,IAAKA,GAAG,CAACH,IAAI,CAAC,CACvBF,IAAI,CAAEE,IAAI,IAAK;MACdT,gBAAgB,CAACS,IAAI,CAAC;IACxB,CAAC,CAAC;EAGN,CAAC,EAAC,EAAE,CAAC;EAEL,MAAMI,KAAK,GAAG;IAACnB;EAAI,CAAC,CAAC,CAAE;EACvB,MAAMoB,OAAO,GAAG;IAAEC,OAAO,EAAE,MAAM;IAAEC,GAAG,EAAE;EAAU,CAAC,CAAC,CAAC;EACrD,MAAMC,MAAM,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC;EACpC,MAAMC,WAAW,GAAG,EAAE,EAAC;;EAEvB;EACA,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAC;IACtBD,WAAW,CAACE,IAAI,CAAE,IAAIC,IAAI,CAAC;MAAC3B;IAAI,CAAC,CAAC4B,OAAO,EAAE,GAAIH,CAAC,GAAGF,MAAO,CAAC,CAAEM,kBAAkB,CAAC,OAAO,EAAET,OAAO,CAAC,CAAC;EACtG;EAIF,oBACEzB,OAAA;IAAKmC,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBAC/BpC,OAAA;MAAKmC,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBACnBpC,OAAA;QAAAoC,QAAA,gBACEpC,OAAA;UAAKmC,SAAS,EAAC,cAAc;UAAAC,QAAA,gBAC3BpC,OAAA;YAAGmC,SAAS,EAAC,UAAU;YAAAC,QAAA,gBACrBpC,OAAA;cAAKmC,SAAS,EAAC,sBAAsB;cAACE,GAAG,EAAEvC;YAAa;cAAAwC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAG,EACxDrC,WAAW,CAACsC,IAAI;UAAA;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACf,eACJzC,OAAA;YAAKmC,SAAS,EAAC,eAAe;YAACE,GAAG,EAAExC;UAAM;YAAAyC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAG;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACzC,eACRzC,OAAA;UAAGmC,SAAS,EAAC,gBAAgB;UAACQ,IAAI,EAAEvC,WAAW,CAACwC,MAAO;UAACC,MAAM,EAAC,QAAQ;UAAAT,QAAA,EAAC;QAExE;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAI;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACA,eACNzC,OAAA;QAAAoC,QAAA,eACIpC,OAAA,CAACN,YAAY;UAAA4C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAG;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACd;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACJ,eACNzC,OAAA;MAAKmC,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAE3BP,WAAW,CAACiB,GAAG,CAAEC,EAAE,iBACjB/C,OAAA;QAAAoC,QAAA,gBACApC,OAAA;UAAAoC,QAAA,EAAIW;QAAE;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,eACXzC,OAAA,CAACJ,oBAAoB;UAAA0C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG,eACxBzC,OAAA,CAACL,oBAAoB;UAAA2C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAEzB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAEV,CAAC;AAAAtC,EAAA,CA7FKF,sBAAsB;AAAA+C,EAAA,GAAtB/C,sBAAsB;AA+F5B,eAAeA,sBAAsB;AAAA,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}