{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ericg\\\\OneDrive\\\\Bureau\\\\Pro\\\\Code\\\\Projet-2-SpotCast\\\\2023-02-js-btz-spotcast\\\\src\\\\components\\\\forecast-cards\\\\ForecastCardBackground.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport axios from 'axios';\nimport ToggleButton from '../utilities/ToggleButton';\nimport ForecastCardExtended from './forecast-card-extended/ForecastCardExtended';\nimport ForecastCardMinified from './forecast-card-minified/ForecastCardMinified';\nimport stars from '../../assets/etoile-32px.png';\nimport localisation from '../../assets/marqueur-32px.png';\nimport './ForecastCardBackground.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForecastCardBackground = _ref => {\n  _s();\n  let {\n    selectedSpots\n  } = _ref;\n  // Contient les donnés API\n  const [tide, setTide] = useState([]);\n  const [surfDataWind, setSurfDataWind] = useState([]);\n  const [surfDataHoule, setSurfDataHoule] = useState([]);\n  // UseState(s) qui vérifient que l'API est chargée\n  const [onLoad, setOnLoad] = useState(true);\n  const [onLoadMarine, setOnLoadMarine] = useState(true);\n  useEffect(() => {\n    // API TIDE récupère la marée haute et basse sur 10jours mais attention car que 10 fetch par jour donc delay de 3h appliqué\n    const delayTide = setTimeout(() => {\n      axios.get(`https://api.stormglass.io/v2/tide/extremes/point?lat=${selectedSpots[0].latitude}&lng=${selectedSpots[0].longitude}&start=2023-04-19&end=2023-04-29`, {\n        headers: {\n          'Authorization': 'edy2bcc96-ddf7-11ed-92e6-0242ac130002-ed2bcd72-ddf7-11ed-92e6-0242ac130002'\n        }\n      }).then(res => res.data).then(data => {\n        setTide(data);\n      });\n    }, 3 * 60 * 60 * 1000);\n  }, []);\n  useEffect(() => {\n    // API VENT( Orientation vent, Puissance en hourly et Daily sur 7 jours)\n    axios.get(`https://api.open-meteo.com/v1/forecast?latitude=${selectedSpots.latitude}&longitude=${selectedSpots.longitude}&hourly=windspeed_10m,winddirection_10m&daily=windspeed_10m_max,winddirection_10m_dominant&timezone=Europe%2FBerlin`).then(req => req.data).then(data => {\n      setSurfDataWind(data);\n      setOnLoad(false);\n    });\n\n    // API HOULE (Hourly : Wave height et wave period / Daily : Wave height Max et Wave direction dominant)\n    axios.get(`https://marine-api.open-meteo.com/v1/marine?latitude=${selectedSpots.latitude}&longitude=${selectedSpots.longitude}&hourly=wave_height,wave_period,wave_direction&daily=wave_height_max,wave_direction_dominant&timezone=Europe%2FBerlin`).then(req => req.data).then(data => {\n      setSurfDataHoule(data);\n      setOnLoadMarine(false);\n    });\n  }, []);\n  const today = new Date(); // Créer un objet Date avec la date et l'heure actuelles\n  const options = {\n    weekday: 'long',\n    day: '2-digit'\n  }; // affiche le jours en long et la date en chiffres\n  const oneDay = 24 * 60 * 60 * 1000; // durée de 24h\n  const dayForecast = []; // array qui receveras les dates\n\n  // boucle qui génère automatiquement les 7 prochains jours\n  for (let i = 0; i < 7; i++) {\n    dayForecast.push(new Date(today.getTime() + i * oneDay).toLocaleDateString('fr-FR', options));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"background-forcast\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flexSpotName\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"spotName\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"spotNameLocalisation\",\n              src: localisation\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 19\n            }, this), selectedSpots.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"spotNameStars\",\n            src: stars\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this), selectedSpots.webcam = false ? /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"spotNameWebcam\",\n          href: selectedSpots.webcam,\n          target: \"_blank\",\n          children: \"Acceder \\xE0 la webcam\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(ToggleButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bodyForecastCard\",\n      children: dayForecast.map((el, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"daily-forecast\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"dayDate\",\n          children: el\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(ForecastCardMinified, {\n          surfDataHoule: surfDataHoule,\n          surfDataWind: surfDataWind,\n          number: index,\n          onLoad: onLoad,\n          onLoadMarine: onLoadMarine\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"dayDate\",\n          children: el\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(ForecastCardExtended, {\n          surfDataWind: surfDataWind,\n          surfDataHoule: surfDataHoule,\n          onLoadMarine: onLoadMarine,\n          onLoad: onLoad,\n          index: index\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 19\n        }, this)]\n      }, uuidv4(), true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(ForecastCardBackground, \"VppgS4UZjGAg6Au1mU0aa3gS0FM=\");\n_c = ForecastCardBackground;\nexport default ForecastCardBackground;\nvar _c;\n$RefreshReg$(_c, \"ForecastCardBackground\");","map":{"version":3,"names":["React","useState","useEffect","v4","uuidv4","axios","ToggleButton","ForecastCardExtended","ForecastCardMinified","stars","localisation","jsxDEV","_jsxDEV","ForecastCardBackground","_ref","_s","selectedSpots","tide","setTide","surfDataWind","setSurfDataWind","surfDataHoule","setSurfDataHoule","onLoad","setOnLoad","onLoadMarine","setOnLoadMarine","delayTide","setTimeout","get","latitude","longitude","headers","then","res","data","req","today","Date","options","weekday","day","oneDay","dayForecast","i","push","getTime","toLocaleDateString","className","children","src","fileName","_jsxFileName","lineNumber","columnNumber","name","webcam","href","target","map","el","index","number","_c","$RefreshReg$"],"sources":["C:/Users/ericg/OneDrive/Bureau/Pro/Code/Projet-2-SpotCast/2023-02-js-btz-spotcast/src/components/forecast-cards/ForecastCardBackground.jsx"],"sourcesContent":["import React from 'react'\r\nimport { useState, useEffect } from 'react'\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport axios from 'axios'\r\nimport ToggleButton from '../utilities/ToggleButton'\r\nimport ForecastCardExtended from './forecast-card-extended/ForecastCardExtended'\r\nimport ForecastCardMinified from './forecast-card-minified/ForecastCardMinified'\r\nimport stars from '../../assets/etoile-32px.png'\r\nimport localisation from '../../assets/marqueur-32px.png'\r\nimport './ForecastCardBackground.css'\r\n\r\nconst ForecastCardBackground = ({selectedSpots}) => {\r\n    // Contient les donnés API\r\n    const [tide, setTide] = useState([])\r\n    const [surfDataWind,  setSurfDataWind] = useState([])\r\n    const [surfDataHoule, setSurfDataHoule] = useState([])\r\n    // UseState(s) qui vérifient que l'API est chargée\r\n    const [onLoad, setOnLoad] = useState(true)\r\n    const [onLoadMarine, setOnLoadMarine] = useState(true)\r\n\r\n    \r\n  \r\n    \r\n    \r\n    useEffect(() => {\r\n      // API TIDE récupère la marée haute et basse sur 10jours mais attention car que 10 fetch par jour donc delay de 3h appliqué\r\n      const delayTide = setTimeout(() => {\r\n        axios\r\n        .get(\r\n          `https://api.stormglass.io/v2/tide/extremes/point?lat=${selectedSpots[0].latitude}&lng=${selectedSpots[0].longitude}&start=2023-04-19&end=2023-04-29`,{\r\n          headers: {\r\n              'Authorization': 'edy2bcc96-ddf7-11ed-92e6-0242ac130002-ed2bcd72-ddf7-11ed-92e6-0242ac130002'\r\n            }}\r\n        )\r\n        .then((res) => res.data)\r\n        .then((data) => {\r\n          setTide(data);\r\n        });\r\n\r\n      }, 3*60*60*1000); \r\n\r\n    },[])\r\n\r\n    useEffect(() => {\r\n      // API VENT( Orientation vent, Puissance en hourly et Daily sur 7 jours)\r\n      axios.get(`https://api.open-meteo.com/v1/forecast?latitude=${selectedSpots.latitude}&longitude=${selectedSpots.longitude}&hourly=windspeed_10m,winddirection_10m&daily=windspeed_10m_max,winddirection_10m_dominant&timezone=Europe%2FBerlin`)\r\n        .then((req) => req.data)\r\n        .then((data) => {\r\n          setSurfDataWind(data);\r\n          setOnLoad(false);\r\n        });\r\n      \r\n        // API HOULE (Hourly : Wave height et wave period / Daily : Wave height Max et Wave direction dominant)\r\n      axios.get(`https://marine-api.open-meteo.com/v1/marine?latitude=${selectedSpots.latitude}&longitude=${selectedSpots.longitude}&hourly=wave_height,wave_period,wave_direction&daily=wave_height_max,wave_direction_dominant&timezone=Europe%2FBerlin`)\r\n        .then((req) => req.data)\r\n        .then((data) => {\r\n          setSurfDataHoule(data);\r\n          setOnLoadMarine(false);\r\n        });\r\n    },[])\r\n\r\n    const today = new Date();  // Créer un objet Date avec la date et l'heure actuelles\r\n    const options = { weekday: 'long', day: '2-digit' }; // affiche le jours en long et la date en chiffres\r\n    const oneDay = 24 * 60 * 60 * 1000; // durée de 24h\r\n    const dayForecast = [] // array qui receveras les dates\r\n\r\n    // boucle qui génère automatiquement les 7 prochains jours\r\n    for(let i = 0; i < 7; i++){\r\n        dayForecast.push((new Date(today.getTime() + (i * oneDay))).toLocaleDateString('fr-FR', options))\r\n    }\r\n    \r\n  return (\r\n    <div className='background-forcast'>\r\n        <div className='header'>\r\n            <div>\r\n              <div className='flexSpotName'>\r\n                <p className='spotName'>\r\n                  <img className='spotNameLocalisation' src={localisation} />\r\n                    {selectedSpots.name} \r\n                  </p>\r\n                  <img className='spotNameStars' src={stars} />\r\n                </div>\r\n                {selectedSpots.webcam = false \r\n                  ? <p></p>\r\n                  : <a className='spotNameWebcam' href={selectedSpots.webcam} target='_blank'>\r\n                Acceder à la webcam\r\n              </a>}\r\n            </div>\r\n            <div>\r\n                <ToggleButton />\r\n            </div>\r\n        </div>\r\n        <div className='bodyForecastCard'>\r\n            {\r\n              dayForecast.map((el,index) => (\r\n                <div key={uuidv4()}  className='daily-forecast'>\r\n                  <p className='dayDate'>{el}</p>\r\n                  <ForecastCardMinified \r\n                    \r\n                    surfDataHoule ={surfDataHoule}\r\n                    surfDataWind ={surfDataWind}\r\n                    number = {index}\r\n                    onLoad ={onLoad} \r\n                    onLoadMarine ={onLoadMarine}\r\n                  />\r\n                  <p className='dayDate'>{el}</p>\r\n                  <ForecastCardExtended \r\n                    \r\n                    surfDataWind ={surfDataWind}\r\n                    surfDataHoule={surfDataHoule}\r\n                    onLoadMarine={onLoadMarine}\r\n                    onLoad ={onLoad}\r\n                    index={index}\r\n                  />\r\n                </div>\r\n              ))\r\n            }\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ForecastCardBackground"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}