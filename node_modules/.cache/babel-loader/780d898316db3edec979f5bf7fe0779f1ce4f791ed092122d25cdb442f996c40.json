{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\guill\\\\Desktop\\\\wild\\\\2023-02-js-btz-spotcast\\\\src\\\\components\\\\widgets\\\\navbar\\\\searchbar\\\\SearchBar.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport SpotDataBase from '../../../utilities/SpotDataBase';\nimport starfilled from '../../../assets/images/star-filled.svg';\nimport staroutline from '../../../assets/images/star-outline.svg';\nimport '../NavBar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchBar = () => {\n  _s();\n  // -----------------------------------------Fav icon useState\n  const [isFavorite, setIsFavorite] = useState(false);\n  //------------------------ -----------------Search input useState\n  const [searchInput, setSearchInput] = useState(\"\");\n\n  // -----------------------------------------Value in String of the Current spots useState\n  const [currentSpots, setCurrentSpots] = useState(\"Your selected spot\");\n\n  // -----------------------------------------Selected Spot by the user and store in the new tab\n  const [selectedSpots, setSelectedSpots] = useState([\"\"]);\n\n  //------------------------------------------Create a new array with filtered database\n  let spots = SpotDataBase.filter(spot => spot.name.toLowerCase().match(searchInput.toLowerCase()));\n\n  //--------------------------------------------Create a variable for the clicked selected spot\n  const onSelectSpot = spot => {\n    setCurrentSpots(spot.name);\n    setSearchInput('');\n  };\n\n  // -------------------------------------------Create a variable to implement the data on the search bar\n  const onChange = e => {\n    setSearchInput(e.target.value);\n    setCurrentSpots('Your selected spot');\n  };\n  const handleFavorite = () => {\n    setIsFavorite(!isFavorite);\n  };\n\n  // -------------------------------------------Filter the selected object to match it with the data base and rendered in a new tab as an object\n  useEffect(() => {\n    setSelectedSpots(SpotDataBase.filter(selectSpot => selectSpot.name == currentSpots));\n  }, [currentSpots]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"searchbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"search-input\",\n      type: \"text\",\n      placeholder: \"Select your spot here!\",\n      value: searchInput,\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }, this), searchInput !== '' && /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"dropdown-search\",\n      children: spots.map(spot => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: () => onSelectSpot(spot),\n          children: spot.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 19\n        }, this)\n      }, spot.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"current-location\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: handleFavorite,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: isFavorite ? \"fa-solid fa-star\" : \"fa-regular fa-star\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected-spot\",\n        children: currentSpots\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"webcam-link\",\n      children: selectedSpots.length === 0 ? \"\" : selectedSpots[0].webcam === false ? \"\" : /*#__PURE__*/_jsxDEV(\"a\", {\n        href: selectedSpots[0].webcam,\n        target: \"_blank\",\n        children: \"Access the webcam\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchBar, \"Bt4GNICczceZ6trOjWwxtwtLPLw=\");\n_c = SearchBar;\nexport default SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["useEffect","useState","SpotDataBase","starfilled","staroutline","jsxDEV","_jsxDEV","SearchBar","_s","isFavorite","setIsFavorite","searchInput","setSearchInput","currentSpots","setCurrentSpots","selectedSpots","setSelectedSpots","spots","filter","spot","name","toLowerCase","match","onSelectSpot","onChange","e","target","value","handleFavorite","selectSpot","className","children","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","id","src","length","webcam","href","_c","$RefreshReg$"],"sources":["C:/Users/guill/Desktop/wild/2023-02-js-btz-spotcast/src/components/widgets/navbar/searchbar/SearchBar.jsx"],"sourcesContent":["import {useEffect, useState} from 'react';\r\nimport SpotDataBase from '../../../utilities/SpotDataBase';\r\nimport starfilled from '../../../assets/images/star-filled.svg';\r\nimport staroutline from '../../../assets/images/star-outline.svg';\r\nimport '../NavBar.css';\r\n\r\nconst SearchBar = () => {\r\n\r\n    // -----------------------------------------Fav icon useState\r\n  const [isFavorite, setIsFavorite] = useState(false);\r\n    //------------------------ -----------------Search input useState\r\n  const [searchInput, setSearchInput] = useState(\"\");\r\n\r\n  // -----------------------------------------Value in String of the Current spots useState\r\n  const [currentSpots, setCurrentSpots] = useState(\"Your selected spot\")\r\n\r\n  // -----------------------------------------Selected Spot by the user and store in the new tab\r\n  const [selectedSpots, setSelectedSpots] = useState([\"\"])\r\n\r\n  //------------------------------------------Create a new array with filtered database\r\n  let spots = SpotDataBase.filter((spot) =>\r\n      spot.name.toLowerCase().match(searchInput.toLowerCase())\r\n  );\r\n\r\n  //--------------------------------------------Create a variable for the clicked selected spot\r\n  const onSelectSpot = (spot) => {\r\n    setCurrentSpots(spot.name);\r\n    setSearchInput('');\r\n  }\r\n\r\n  // -------------------------------------------Create a variable to implement the data on the search bar\r\n  const onChange = (e) => {\r\n    setSearchInput(e.target.value);\r\n    setCurrentSpots('Your selected spot');\r\n  }\r\n\r\n  const handleFavorite=()=>{\r\n    setIsFavorite(!isFavorite)\r\n  }\r\n\r\n  // -------------------------------------------Filter the selected object to match it with the data base and rendered in a new tab as an object\r\n  useEffect(() => {\r\n    setSelectedSpots(SpotDataBase.filter((selectSpot) => \r\n    selectSpot.name == currentSpots))\r\n  },[currentSpots])\r\n\r\n  return (\r\n    <div className=\"searchbar\">\r\n\r\n        {/* Create the search bar */}\r\n\r\n          <input\r\n            className=\"search-input\"\r\n            type=\"text\"\r\n            placeholder=\"Select your spot here!\"\r\n            value={searchInput}\r\n            onChange={onChange}\r\n          />\r\n          \r\n          {/* Create the dropdown suggestion box in a new tab that is generated on the spot as you input in the search bar */}\r\n          \r\n          {searchInput !== '' && (\r\n            <ul className='dropdown-search'>\r\n              {spots.map(spot => (\r\n                <li key={spot.id}>\r\n                  <p  onClick={() => onSelectSpot(spot)}>{spot.name}</p>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n\r\n        <div className=\"current-location\">\r\n          {/* Implement a clickable favorite icon for your surf spot */}\r\n\r\n          <span onClick={handleFavorite}>\r\n          <img src={isFavorite ? \"fa-solid fa-star\" : \"fa-regular fa-star\"} />\r\n                </span>\r\n          <div className=\"selected-spot\">\r\n            {currentSpots}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Implement a clickable webcam link for your surf spot if it exists in the data base*/}\r\n       <div className=\"webcam-link\">\r\n        {selectedSpots.length === 0 \r\n          ? \"\" \r\n          : selectedSpots[0].webcam === false\r\n            ? \"\" \r\n            : <a href={selectedSpots[0].webcam} target='_blank'>Access the webcam</a> }\r\n            {/* The ternary operator here ask if the object selectedSpots is empty or not, \r\n            then fetch the value of the key webcam and display it if it exists */}\r\n        </div>\r\n       \r\n      </div>\r\n      \r\n  )\r\n}\r\n\r\nexport default SearchBar"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}