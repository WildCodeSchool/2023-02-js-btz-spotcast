{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\guill\\\\Desktop\\\\wild\\\\2023-02-js-btz-spotcast\\\\src\\\\pages\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Wind from '../components/widgets/wind/Wind';\nimport MeteoDay from '../components/widgets/meteo-day/MeteoDay';\nimport MeteoThreeDay from '../components/widgets/meteo-three-day/MeteoThreeDay';\nimport NavBar from '../components/widgets/navbar/NavBar';\nimport './Dashboard.css';\nimport Tide from '../components/widgets/tide/Tide';\nimport Sunset from '../components/widgets/sunset/Sunset';\nimport Login from '../../src/components/widgets/login/Login';\nimport Register from '../../src/components/widgets/login/Register';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  //usdeState to check when the Open-Meteo API is loaded\n  const [onLoadOpenMeteo, setOnLoadOpenMeteo] = useState(true);\n\n  //Setting up a realtime clock\n  const [date, setDate] = useState(new Date());\n  useEffect(() => {\n    const timer = setInterval(() => setDate(new Date()), 60000);\n    return function () {\n      clearInterval(timer);\n    };\n  });\n  const timeStamp = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}T${String(date.getHours()).padStart(2, '0')}:00`;\n\n  //fetching the wind infos\n  const [wind, setWind] = useState([]);\n  useEffect(() => {\n    axios.get('https://api.open-meteo.com/v1/forecast?latitude=42.47&longitude=-1.56&hourly=windspeed_10m,winddirection_10m').then(res => res.data).then(data => {\n      setWind(data.hourly);\n      setOnLoadOpenMeteo(false);\n    });\n  }, []);\n\n  //fetching the meteo infos\n  const [meteo, setMeteo] = useState([]);\n  const [onLoadMeteo, setOnLoadMeteo] = useState(true);\n  useEffect(() => {\n    axios.get('https://api.open-meteo.com/v1/forecast?latitude=43.48&longitude=-1.56&hourly=temperature_2m,weathercode&timezone=Europe%2FBerlin').then(res => res.data).then(data => {\n      setMeteo(data.hourly);\n      setOnLoadMeteo(false);\n    });\n  }, []);\n\n  //fetching meteo infos at 3 day.\n  const [meteo3D, setMeteo3D] = useState([]);\n  const [onLoadMeteo3D, setOnLoadMeteo3D] = useState(true);\n  useEffect(() => {\n    axios.get('https://api.open-meteo.com/v1/forecast?latitude=43.48&longitude=-1.56&daily=weathercode,temperature_2m_max,temperature_2m_min&timezone=Europe%2FBerlin').then(res => res.data).then(data => {\n      setMeteo3D(data.daily);\n      setOnLoadMeteo3D(false);\n    });\n  }, []);\n\n  //getting the index of current time in 'wind' array\n  const [timeStampIndex, setTimeStampIndex] = useState('');\n  useEffect(() => {\n    wind.time &&\n    //checking if 'wind.time' is already loaded\n    setTimeStampIndex(wind.time.indexOf(timeStamp));\n  }, [wind.time]); //setup timeStampIndex after ' wind.time' is updated\n\n  // all the UseStates for login popup\n  const [currentForm, setCurrentForm] = useState('login');\n  const [currentUserName, setCurrentUserName] = useState('Doudou');\n  const [currentUserPicture, setCurrentUserPicture] = useState('https://i.pinimg.com/originals/f9/9c/f1/f99cf1db89af1ea64a7085eca75d98b2.jpg');\n  const toggleForm = formName => {\n    setCurrentForm(formName);\n  };\n  const [show, setShow] = useState(true);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [currentForm === 'login' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overlay-modal\",\n      show: show,\n      setShow: setShow,\n      children: /*#__PURE__*/_jsxDEV(Login, {\n        setCurrentUserName: setCurrentUserName,\n        setCurrentUserPicture: setCurrentUserPicture,\n        onFormSwitch: toggleForm,\n        show: show,\n        setShow: setShow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overlay-modal\",\n      show: show,\n      setShow: setShow,\n      children: /*#__PURE__*/_jsxDEV(Register, {\n        show: show,\n        setShow: setShow,\n        onFormSwitch: toggleForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(NavBar, {\n      setShow: setShow,\n      show: show,\n      currentUserName: currentUserName,\n      currentUserPicture: currentUserPicture\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"widgets-container\",\n      children: [/*#__PURE__*/_jsxDEV(Wind, {\n        ...wind,\n        timeStampIndex: timeStampIndex,\n        onLoadOpenMeteo: onLoadOpenMeteo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tide, {\n        date: date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MeteoDay, {\n        ...meteo,\n        onLoadMeteo: onLoadMeteo,\n        timeStampIndex: timeStampIndex\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MeteoThreeDay, {\n        meteo3D: meteo3D,\n        onLoadMeteo3D: onLoadMeteo3D\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Sunset, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"zpiStyy+hW5jexxMraQr7Zcdf6s=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","axios","Wind","MeteoDay","MeteoThreeDay","NavBar","Tide","Sunset","Login","Register","jsxDEV","_jsxDEV","Dashboard","_s","onLoadOpenMeteo","setOnLoadOpenMeteo","date","setDate","Date","timer","setInterval","clearInterval","timeStamp","getFullYear","String","getMonth","padStart","getDate","getHours","wind","setWind","get","then","res","data","hourly","meteo","setMeteo","onLoadMeteo","setOnLoadMeteo","meteo3D","setMeteo3D","onLoadMeteo3D","setOnLoadMeteo3D","daily","timeStampIndex","setTimeStampIndex","time","indexOf","currentForm","setCurrentForm","currentUserName","setCurrentUserName","currentUserPicture","setCurrentUserPicture","toggleForm","formName","show","setShow","className","children","onFormSwitch","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/guill/Desktop/wild/2023-02-js-btz-spotcast/src/pages/Dashboard.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport Wind from '../components/widgets/wind/Wind';\r\nimport MeteoDay from '../components/widgets/meteo-day/MeteoDay';\r\nimport MeteoThreeDay from '../components/widgets/meteo-three-day/MeteoThreeDay';\r\nimport NavBar from '../components/widgets/navbar/NavBar';\r\nimport './Dashboard.css';\r\nimport Tide from '../components/widgets/tide/Tide';\r\nimport Sunset from '../components/widgets/sunset/Sunset';\r\nimport Login from '../../src/components/widgets/login/Login';\r\nimport Register from '../../src/components/widgets/login/Register';\r\n\r\nconst Dashboard = () => {\r\n  //usdeState to check when the Open-Meteo API is loaded\r\n  const [onLoadOpenMeteo, setOnLoadOpenMeteo] = useState(true);\r\n\r\n  //Setting up a realtime clock\r\n  const [date, setDate] = useState(new Date());\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => setDate(new Date()), 60000);\r\n    return function () {\r\n      clearInterval(timer);\r\n    };\r\n  });\r\n\r\n  const timeStamp = `${date.getFullYear()}-${String(\r\n    date.getMonth() + 1\r\n  ).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}T${String(\r\n    date.getHours()\r\n  ).padStart(2, '0')}:00`;\r\n\r\n  //fetching the wind infos\r\n  const [wind, setWind] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        'https://api.open-meteo.com/v1/forecast?latitude=42.47&longitude=-1.56&hourly=windspeed_10m,winddirection_10m'\r\n      )\r\n      .then((res) => res.data)\r\n      .then((data) => {\r\n        setWind(data.hourly);\r\n        setOnLoadOpenMeteo(false);\r\n      });\r\n  }, []);\r\n\r\n  //fetching the meteo infos\r\n  const [meteo, setMeteo] = useState([]);\r\n  const [onLoadMeteo, setOnLoadMeteo] = useState(true);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        'https://api.open-meteo.com/v1/forecast?latitude=43.48&longitude=-1.56&hourly=temperature_2m,weathercode&timezone=Europe%2FBerlin'\r\n      )\r\n      .then((res) => res.data)\r\n      .then((data) => {\r\n        setMeteo(data.hourly);\r\n        setOnLoadMeteo(false);\r\n      });\r\n  }, []);\r\n\r\n  //fetching meteo infos at 3 day.\r\n  const [meteo3D, setMeteo3D] = useState([]);\r\n  const [onLoadMeteo3D, setOnLoadMeteo3D] = useState(true);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        'https://api.open-meteo.com/v1/forecast?latitude=43.48&longitude=-1.56&daily=weathercode,temperature_2m_max,temperature_2m_min&timezone=Europe%2FBerlin'\r\n      )\r\n      .then((res) => res.data)\r\n      .then((data) => {\r\n        setMeteo3D(data.daily);\r\n        setOnLoadMeteo3D(false);\r\n      });\r\n  }, []);\r\n\r\n  //getting the index of current time in 'wind' array\r\n  const [timeStampIndex, setTimeStampIndex] = useState('');\r\n\r\n  useEffect(() => {\r\n    wind.time && //checking if 'wind.time' is already loaded\r\n      setTimeStampIndex(wind.time.indexOf(timeStamp));\r\n  }, [wind.time]); //setup timeStampIndex after ' wind.time' is updated\r\n\r\n  // all the UseStates for login popup\r\n  const [currentForm, setCurrentForm] = useState('login');\r\n  const [currentUserName, setCurrentUserName] = useState('Doudou');\r\n  const [currentUserPicture, setCurrentUserPicture] = useState(\r\n    'https://i.pinimg.com/originals/f9/9c/f1/f99cf1db89af1ea64a7085eca75d98b2.jpg'\r\n  );\r\n\r\n  const toggleForm = (formName) => {\r\n    setCurrentForm(formName);\r\n  };\r\n\r\n  const [show, setShow] = useState(true);\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      {currentForm === 'login' ? (\r\n        <div className=\"overlay-modal\" show={show} setShow={setShow}>\r\n          <Login\r\n            setCurrentUserName={setCurrentUserName}\r\n            setCurrentUserPicture={setCurrentUserPicture}\r\n            onFormSwitch={toggleForm}\r\n            show={show}\r\n            setShow={setShow}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <div className=\"overlay-modal\" show={show} setShow={setShow}>\r\n          <Register show={show} setShow={setShow} onFormSwitch={toggleForm} />\r\n        </div>\r\n      )}\r\n\r\n      <NavBar\r\n        setShow={setShow}\r\n        show={show}\r\n        currentUserName={currentUserName}\r\n        currentUserPicture={currentUserPicture}\r\n      />\r\n      <div className=\"widgets-container\">\r\n        <Wind\r\n          {...wind}\r\n          timeStampIndex={timeStampIndex}\r\n          onLoadOpenMeteo={onLoadOpenMeteo}\r\n        />\r\n        <Tide date={date} />\r\n        <MeteoDay\r\n          {...meteo}\r\n          onLoadMeteo={onLoadMeteo}\r\n          timeStampIndex={timeStampIndex}\r\n        />\r\n        <MeteoThreeDay meteo3D={meteo3D} onLoadMeteo3D={onLoadMeteo3D} />\r\n        <Sunset />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}