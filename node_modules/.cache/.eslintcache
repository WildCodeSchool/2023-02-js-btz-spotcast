[{"C:\\Users\\guill\\Desktop\\wild\\2023-02-js-btz-spotcast\\src\\index.js":"1","C:\\Users\\guill\\Desktop\\wild\\2023-02-js-btz-spotcast\\src\\App.js":"2","C:\\Users\\guill\\Desktop\\wild\\2023-02-js-btz-spotcast\\src\\components\\widgets\\wind\\Wind.jsx":"3","C:\\Users\\guill\\Desktop\\wild\\2023-02-js-btz-spotcast\\src\\components\\utilities\\ToggleButton.jsx":"4","C:\\Users\\guill\\Desktop\\wild\\2023-02-js-btz-spotcast\\src\\components\\widgets\\navbar\\NavBar.jsx":"5","C:\\Users\\guill\\Desktop\\wild\\2023-02-js-btz-spotcast\\src\\components\\widgets\\navbar\\searchbar\\SearchBar.jsx":"6","C:\\Users\\guill\\Desktop\\wild\\2023-02-js-btz-spotcast\\src\\components\\utilities\\SpotDataBase.jsx":"7","C:\\Users\\guill\\Desktop\\wild\\2023-02-js-btz-spotcast\\src\\pages\\Dashboard.jsx":"8","C:\\Users\\guill\\Desktop\\wild\\2023-02-js-btz-spotcast\\src\\components\\widgets\\tide\\Tide.jsx":"9","C:\\Users\\guill\\Desktop\\wild\\2023-02-js-btz-spotcast\\src\\components\\widgets\\sunset\\Sunset.jsx":"10","C:\\Users\\guill\\Desktop\\wild\\2023-02-js-btz-spotcast\\src\\components\\widgets\\tide\\TideDatas.jsx":"11","C:\\Users\\guill\\Desktop\\wild\\2023-02-js-btz-spotcast\\src\\components\\widgets\\meteo-three-day\\MeteoThreeDay.jsx":"12","C:\\Users\\guill\\Desktop\\wild\\2023-02-js-btz-spotcast\\src\\components\\widgets\\meteo-day\\MeteoDay.jsx":"13","C:\\Users\\guill\\Desktop\\wild\\2023-02-js-btz-spotcast\\src\\components\\widgets\\meteo-three-day\\components\\IconMeteoThreeDays.jsx":"14","C:\\Users\\guill\\Desktop\\wild\\2023-02-js-btz-spotcast\\src\\components\\widgets\\meteo-three-day\\components\\DateThreeDays.jsx":"15","C:\\Users\\guill\\Desktop\\wild\\2023-02-js-btz-spotcast\\src\\components\\widgets\\meteo-three-day\\components\\TempThreeDays.jsx":"16","C:\\Users\\guill\\Desktop\\wild\\2023-02-js-btz-spotcast\\src\\components\\widgets\\login\\Login.jsx":"17","C:\\Users\\guill\\Desktop\\wild\\2023-02-js-btz-spotcast\\src\\components\\widgets\\login\\Register.jsx":"18","C:\\Users\\guill\\Desktop\\wild\\2023-02-js-btz-spotcast\\src\\components\\utilities\\UsersDataBase.jsx":"19"},{"size":248,"mtime":1681982635836,"results":"20","hashOfConfig":"21"},{"size":203,"mtime":1682064298527,"results":"22","hashOfConfig":"21"},{"size":2911,"mtime":1682266943982,"results":"23","hashOfConfig":"21"},{"size":534,"mtime":1681547869627,"results":"24","hashOfConfig":"21"},{"size":732,"mtime":1682518856916,"results":"25","hashOfConfig":"21"},{"size":3540,"mtime":1682266943980,"results":"26","hashOfConfig":"21"},{"size":2968,"mtime":1682499450114,"results":"27","hashOfConfig":"21"},{"size":4742,"mtime":1682606027183,"results":"28","hashOfConfig":"21"},{"size":4325,"mtime":1682064298541,"results":"29","hashOfConfig":"21"},{"size":2626,"mtime":1682064298538,"results":"30","hashOfConfig":"21"},{"size":411,"mtime":1682266943981,"results":"31","hashOfConfig":"21"},{"size":2945,"mtime":1682266943976,"results":"32","hashOfConfig":"21"},{"size":2849,"mtime":1682266943974,"results":"33","hashOfConfig":"21"},{"size":1520,"mtime":1682266943977,"results":"34","hashOfConfig":"21"},{"size":207,"mtime":1682266943976,"results":"35","hashOfConfig":"21"},{"size":202,"mtime":1682266943978,"results":"36","hashOfConfig":"21"},{"size":1970,"mtime":1682606444549,"results":"37","hashOfConfig":"21"},{"size":1853,"mtime":1682601589268,"results":"38","hashOfConfig":"21"},{"size":1125,"mtime":1682581498115,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"jgmxf7",{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"43"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"60","usedDeprecatedRules":"43"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"43"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"43"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"43"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\guill\\Desktop\\wild\\2023-02-js-btz-spotcast\\src\\index.js",[],[],[],"C:\\Users\\guill\\Desktop\\wild\\2023-02-js-btz-spotcast\\src\\App.js",[],[],"C:\\Users\\guill\\Desktop\\wild\\2023-02-js-btz-spotcast\\src\\components\\widgets\\wind\\Wind.jsx",["103"],[],"import React, { useEffect, useState } from \"react\";\r\nimport \"./Wind.css\";\r\nimport \"../cards.css\";\r\nimport ToggleButton from \"../../utilities/ToggleButton\";\r\n\r\nconst Wind = ({ winddirection_10m, windspeed_10m, timeStampIndex, onLoadOpenMeteo }) => {\r\n\r\n  const [windDirection, setWindDirection] = useState('')\r\n\r\n\r\n  useEffect(() => {\r\n    if(onLoadOpenMeteo){\r\n    }\r\n    else if ((winddirection_10m[timeStampIndex] > 337) || (winddirection_10m[timeStampIndex] <= 22)) {\r\n      setWindDirection('north')\r\n    } else if ((winddirection_10m[timeStampIndex] > 22) && (winddirection_10m[timeStampIndex] <= 67)) {\r\n      setWindDirection('north-east')\r\n    } else if ((winddirection_10m[timeStampIndex] > 67) && (winddirection_10m[timeStampIndex] <= 112)) {\r\n      setWindDirection('east')\r\n    } else if ((winddirection_10m[timeStampIndex] > 112) && (winddirection_10m[timeStampIndex] <= 157)) {\r\n      setWindDirection('south-east')\r\n    } else if ((winddirection_10m[timeStampIndex] > 157) && (winddirection_10m[timeStampIndex] <= 202)) {\r\n      setWindDirection('south')\r\n    } else if ((winddirection_10m[timeStampIndex] > 202) && (winddirection_10m[timeStampIndex] <= 247)) {\r\n      setWindDirection('south-west')\r\n    } else if ((winddirection_10m[timeStampIndex] > 247) && (winddirection_10m[timeStampIndex] <= 292)) {\r\n      setWindDirection('west')\r\n    } else {\r\n      setWindDirection('north-west')\r\n    }\r\n  \r\n  }, [onLoadOpenMeteo])\r\n\r\n\r\n  return (\r\n    <div className=\"small-square\">\r\n      <div className=\"card-header\">\r\n        <p className=\"card-title\">Wind</p>\r\n        <ToggleButton />\r\n      </div>\r\n      <div className=\"card-content\">\r\n        <div className=\"wind-chart\">\r\n          <div className=\"cardinal-points\">\r\n            <span className={windDirection === \"north\" ? \"checked\" : \"\"} style={{ \"--n\": 1 }}></span>\r\n            <span className={windDirection === \"north-east\" ? \"checked\" : \"\"} style={{ \"--n\": 2 }}></span>\r\n            <span className={windDirection === \"east\" ? \"checked\" : \"\"} style={{ \"--n\": 3 }}></span>\r\n            <span className={windDirection === \"south-east\" ? \"checked\" : \"\"} style={{ \"--n\": 4 }}></span>\r\n            <span className={windDirection === \"south\" ? \"checked\" : \"\"} style={{ \"--n\": 5 }}></span>\r\n            <span className={windDirection === \"south-west\" ? \"checked\" : \"\"} style={{ \"--n\": 6 }}></span>\r\n            <span className={windDirection === \"west\" ? \"checked\" : \"\"} style={{ \"--n\": 7 }}></span>\r\n            <span className={windDirection === \"north-west\" ? \"checked\" : \"\"} style={{ \"--n\": 8 }}></span>\r\n          </div>\r\n          <div className=\"wind-stats\">\r\n            <p className=\"wind-strenght\">\r\n              {timeStampIndex &&\r\n                Math.floor(windspeed_10m[timeStampIndex])}\r\n            </p>\r\n            <p>Km/h</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Wind;\r\n","C:\\Users\\guill\\Desktop\\wild\\2023-02-js-btz-spotcast\\src\\components\\utilities\\ToggleButton.jsx",[],[],"C:\\Users\\guill\\Desktop\\wild\\2023-02-js-btz-spotcast\\src\\components\\widgets\\navbar\\NavBar.jsx",["104"],[],"C:\\Users\\guill\\Desktop\\wild\\2023-02-js-btz-spotcast\\src\\components\\widgets\\navbar\\searchbar\\SearchBar.jsx",["105","106","107"],[],"import {useEffect, useState} from 'react';\r\nimport SpotDataBase from '../../../utilities/SpotDataBase';\r\nimport starfilled from '../../../../assets/images/star-filled.svg';\r\nimport staroutline from '../../../../assets/images/star-outline.svg';\r\nimport '../NavBar.css';\r\n\r\nconst SearchBar = () => {\r\n\r\n    // -----------------------------------------Fav icon useState\r\n  const [isFavorite, setIsFavorite] = useState(false);\r\n    //------------------------ -----------------Search input useState\r\n  const [searchInput, setSearchInput] = useState(\"\");\r\n\r\n  // -----------------------------------------Value in String of the Current spots useState\r\n  const [currentSpots, setCurrentSpots] = useState(\"Your selected spot\")\r\n\r\n  // -----------------------------------------Selected Spot by the user and store in the new tab\r\n  const [selectedSpots, setSelectedSpots] = useState([\"\"])\r\n\r\n  //------------------------------------------Create a new array with filtered database\r\n  let spots = SpotDataBase.filter((spot) =>\r\n      spot.name.toLowerCase().match(searchInput.toLowerCase())\r\n  );\r\n\r\n  //--------------------------------------------Create a variable for the clicked selected spot\r\n  const onSelectSpot = (spot) => {\r\n    setCurrentSpots(spot.name);\r\n    setSearchInput('');\r\n  }\r\n\r\n  // -------------------------------------------Create a variable to implement the data on the search bar\r\n  const onChange = (e) => {\r\n    setSearchInput(e.target.value);\r\n    setCurrentSpots('Your selected spot');\r\n  }\r\n\r\n  const handleFavorite=()=>{\r\n    setIsFavorite(!isFavorite)\r\n  }\r\n\r\n  // -------------------------------------------Filter the selected object to match it with the data base and rendered in a new tab as an object\r\n  useEffect(() => {\r\n    setSelectedSpots(SpotDataBase.filter((selectSpot) => \r\n    selectSpot.name == currentSpots))\r\n  },[currentSpots])\r\n\r\n  return (\r\n    <div className=\"searchbar\">\r\n\r\n        {/* Create the search bar */}\r\n\r\n          <input\r\n            className=\"search-input\"\r\n            type=\"text\"\r\n            placeholder=\"Select your spot here!\"\r\n            value={searchInput}\r\n            onChange={onChange}\r\n          />\r\n          \r\n          {/* Create the dropdown suggestion box in a new tab that is generated on the spot as you input in the search bar */}\r\n          \r\n          {searchInput !== '' && (\r\n            <ul className='dropdown-search'>\r\n              {spots.map(spot => (\r\n                <li key={spot.id}>\r\n                  <p  onClick={() => onSelectSpot(spot)}>{spot.name}</p>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n\r\n        <div className=\"current-location\">\r\n          {/* Implement a clickable favorite icon for your surf spot */}\r\n          <img onClick={handleFavorite} src={isFavorite ? starfilled : staroutline} />\r\n          <div className=\"selected-spot\">\r\n            {currentSpots}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Implement a clickable webcam link for your surf spot if it exists in the data base*/}\r\n       <div className=\"webcam-link\">\r\n        {selectedSpots.length === 0 \r\n          ? \"\" \r\n          : selectedSpots[0].webcam === false\r\n            ? \"\" \r\n            : <a href={selectedSpots[0].webcam} target='_blank'>Access the webcam</a> }\r\n            {/* The ternary operator here ask if the object selectedSpots is empty or not, \r\n            then fetch the value of the key webcam and display it if it exists */}\r\n        </div>\r\n       \r\n      </div>\r\n      \r\n  )\r\n}\r\n\r\nexport default SearchBar","C:\\Users\\guill\\Desktop\\wild\\2023-02-js-btz-spotcast\\src\\components\\utilities\\SpotDataBase.jsx",[],[],"C:\\Users\\guill\\Desktop\\wild\\2023-02-js-btz-spotcast\\src\\pages\\Dashboard.jsx",["108"],[],"C:\\Users\\guill\\Desktop\\wild\\2023-02-js-btz-spotcast\\src\\components\\widgets\\tide\\Tide.jsx",["109","110","111","112","113","114"],[],"import React, { useEffect } from 'react'\r\nimport ToggleButton from '../../utilities/ToggleButton'\r\nimport './Tide.css'\r\nimport TideDatas from './TideDatas'\r\nimport tideShape from '../../../tide-shape.svg'\r\n\r\nconst Tide = ({ date }) => {\r\n\r\n    const tideTime = TideDatas.map((el) => el.time);\r\n    //Création d'un tableau qui contient tous les TimeStamps des marées\r\n\r\n    let negative = -25000000;// Temps en ms = 8h30\r\n    let positive = 25000000;// Temps en ms = 8h30\r\n\r\n    let currentTide = \"\";\r\n    let currentTideIndex = \"\";\r\n    let currentTideinfos = \"\";\r\n\r\n    let previousTide = \"\";\r\n    let previousTideIndex = \"\";\r\n    let previousTideinfos = \"\";\r\n\r\n    let nextTide = \"\";\r\n    let nextTideIndex = \"\";\r\n    let nextTideinfos = \"\";\r\n\r\n\r\n    for (let i = 0; i < tideTime.length; i++) {\r\n\r\n        let result = new Date(tideTime[i]) - date;\r\n\r\n        if ((result === 0) || ((result >= - 1800000) && (result <= 1800000))) {\r\n            currentTide = tideTime[i];\r\n            currentTideIndex = i;\r\n            currentTideinfos = TideDatas[i];\r\n        } else if ((result < 0) && (result > negative)) {\r\n            negative = result;\r\n            previousTide = tideTime[i];\r\n            previousTideIndex = i;\r\n            previousTideinfos = TideDatas[i];\r\n        } else if ((result > 0) && (result < positive)) {\r\n            positive = result;\r\n            nextTide = tideTime[i];\r\n            nextTideIndex = i;\r\n            nextTideinfos = TideDatas[i];\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className='big-rectangle-width tide-card'>\r\n            <div className=\"card-header\">\r\n                <p className=\"card-title\">Tide</p>\r\n                <ToggleButton />\r\n            </div>\r\n            <div className='card-content tide-content'>\r\n                <div className='tide-shape'>\r\n                    <div className={currentTide ? `circle ${currentTideinfos.type}` : `circle going-${nextTideinfos.type}`} ></div>\r\n                    <img src={tideShape} alt=\"\" />\r\n\r\n                </div>\r\n                {currentTide\r\n                    ? <div className='tide-datas'>\r\n                        <div className='low-tide'>\r\n                            <p className='tide-data'>\r\n                                {`${String(new Date(currentTideinfos.time).getHours()).padStart(2, \"0\")} : ${String(new Date(currentTideinfos.time).getMinutes()).padStart(2, \"0\")}`}\r\n                            </p>\r\n                            <p className='tide-text'>\r\n                                {currentTideinfos.type} tide\r\n                            </p>\r\n                        </div>\r\n                        <div className='high-tide'>\r\n                            <p className='tide-data'>\r\n                                {`${String(new Date(nextTideinfos.time).getHours()).padStart(2, \"0\")} : ${String(new Date(nextTideinfos.time).getMinutes()).padStart(2, \"0\")}`}\r\n                            </p>\r\n                            <p className='tide-text'>\r\n                                {nextTideinfos.type} tide\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    : <div className='tide-datas'>\r\n                        <div className='low-tide'>\r\n                            <p className='tide-data'>\r\n                                {`${String(new Date(previousTideinfos.time).getHours()).padStart(2, \"0\")}:${String(new Date(previousTideinfos.time).getMinutes()).padStart(2, \"0\")}`}\r\n                            </p>\r\n                            <p className='tide-text'>\r\n                                {previousTideinfos.type} tide\r\n                            </p>\r\n                        </div>\r\n                        <div className='high-tide'>\r\n                            <p className='tide-data'>\r\n                                {`${String(new Date(nextTideinfos.time).getHours()).padStart(2, \"0\")}:${String(new Date(nextTideinfos.time).getMinutes()).padStart(2, \"0\")}`}\r\n                            </p>\r\n                            <p className='tide-text'>\r\n                                {nextTideinfos.type} tide\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tide","C:\\Users\\guill\\Desktop\\wild\\2023-02-js-btz-spotcast\\src\\components\\widgets\\sunset\\Sunset.jsx",[],[],"C:\\Users\\guill\\Desktop\\wild\\2023-02-js-btz-spotcast\\src\\components\\widgets\\tide\\TideDatas.jsx",[],[],"C:\\Users\\guill\\Desktop\\wild\\2023-02-js-btz-spotcast\\src\\components\\widgets\\meteo-three-day\\MeteoThreeDay.jsx",[],[],"C:\\Users\\guill\\Desktop\\wild\\2023-02-js-btz-spotcast\\src\\components\\widgets\\meteo-day\\MeteoDay.jsx",["115","116","117"],[],"import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport ToggleButton from \"../../utilities/ToggleButton\";\r\nimport soleil from '../../../assets/images/soleil.svg';\r\nimport soleilNuages from '../../../assets/images/soleil-nuages.svg';\r\nimport nuages from '../../../assets/images/nuages.svg';\r\nimport pluie from '../../../assets/images/pluie.svg';\r\nimport vent from '../../../assets/images/vent.svg';\r\nimport neige from '../../../assets/images/neige.svg';\r\n\r\nimport \"../cards.css\";\r\nimport \"./MeteoDay.css\";\r\n\r\nconst MeteoDay = ({ weathercode, temperature_2m, timeStampIndex, onLoadMeteo }) => {\r\n\r\n    let [dayIcon, setDayIcon] = useState('')\r\n    let [weatherCode, setweatherCode] = useState(onLoadMeteo ? \"\" : weathercode[timeStampIndex])\r\n    let [weatherText, setweatherText] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        if (onLoadMeteo) {\r\n        } else if (weatherCode === 0) {\r\n            setDayIcon(soleil)\r\n            setweatherText(\"Soleil\")\r\n        } else if (weatherCode >= 1 || weatherCode <= 3) {\r\n            setDayIcon(soleilNuages)\r\n            setweatherText(\"Couvert\")\r\n        } else if (weatherCode >= 45 || weatherCode <= 48) {\r\n            setDayIcon(soleilNuages)\r\n            setweatherText(\"Brouillard\")\r\n        } else if (weatherCode >= 51 || weatherCode <= 57) {\r\n            setDayIcon(nuages)\r\n            setweatherText(\"Bruine\")\r\n        } else if (weatherCode >= 61 || weatherCode <= 67) {\r\n            setDayIcon(pluie)\r\n            setweatherText(\"Pluie\")\r\n        } else if ((weatherCode >= 71 || weatherCode <= 77) || (weatherCode >= 85 || weatherCode <= 86)) {\r\n            setDayIcon(neige)\r\n            setweatherText(\"Neige\")\r\n        } else if (weatherCode >= 80 || weatherCode <= 82) {\r\n            setDayIcon(pluie)\r\n            setweatherText(\"Averses\")\r\n        } if (weatherCode >= 95) {\r\n            setDayIcon(pluie)\r\n            setweatherText(\"Orages\")\r\n        }\r\n    }, [onLoadMeteo])\r\n\r\n    return (\r\n        <div>\r\n            {onLoadMeteo ? \"\" :\r\n                <div className=\"small-square\">\r\n                    <div className=\"card-header\">\r\n                        <p className=\"card-title\">Meteo</p>\r\n                        <ToggleButton />\r\n                    </div>\r\n                    <div className=\"card-content card-meteo\">\r\n                        <div className=\"day-icon\">\r\n                            <img src={dayIcon} alt=\"soleil\" />\r\n                        </div>\r\n\r\n                        <div className=\"meteo-infos\">\r\n                            <p className=\"meteo-temperature\">{temperature_2m[timeStampIndex]}°</p>\r\n                            <p className=\"meteo-text\">{weatherText}</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MeteoDay","C:\\Users\\guill\\Desktop\\wild\\2023-02-js-btz-spotcast\\src\\components\\widgets\\meteo-three-day\\components\\IconMeteoThreeDays.jsx",["118","119","120"],[],"import React, { useEffect, useState } from 'react'\r\nimport soleil from '../../../../assets/images/soleil.svg';\r\nimport soleilNuages from '../../../../assets/images/soleil-nuages.svg';\r\nimport nuages from '../../../../assets/images/nuages.svg';\r\nimport pluie from '../../../../assets/images/pluie.svg';\r\nimport vent from '../../../../assets/images/vent.svg';\r\nimport neige from '../../../../assets/images/neige.svg';\r\n\r\n\r\n\r\nconst IconMeteoThreeDays = ({ meteoIcon, onLoadMeteo3D }) => {\r\n\r\n    const [dayIcon, setDayIcon] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n\r\n        if (onLoadMeteo3D) {\r\n        } else if (meteoIcon === 0) {\r\n            setDayIcon(soleil)\r\n        } else if (meteoIcon >= 1 && meteoIcon <= 3) {\r\n            setDayIcon(soleilNuages)\r\n        } else if (meteoIcon >= 45 && meteoIcon <= 48) {\r\n            setDayIcon(soleilNuages)\r\n        } else if (meteoIcon >= 51 && meteoIcon <= 57) {\r\n            setDayIcon(nuages)\r\n        } else if (meteoIcon >= 61 && meteoIcon <= 67) {\r\n            setDayIcon(pluie)\r\n        } else if ((meteoIcon >= 71 && meteoIcon <= 77) || (meteoIcon >= 85 && meteoIcon <= 86)) {\r\n            setDayIcon(neige)\r\n        } else if (meteoIcon >= 80 && meteoIcon <= 82) {\r\n            setDayIcon(pluie)\r\n        } if (meteoIcon >= 95) {\r\n            setDayIcon(pluie)\r\n        }\r\n    }, [onLoadMeteo3D])\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className='day-icon-3d'>\r\n            <img src={dayIcon} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IconMeteoThreeDays\r\n\r\n","C:\\Users\\guill\\Desktop\\wild\\2023-02-js-btz-spotcast\\src\\components\\widgets\\meteo-three-day\\components\\DateThreeDays.jsx",[],[],"C:\\Users\\guill\\Desktop\\wild\\2023-02-js-btz-spotcast\\src\\components\\widgets\\meteo-three-day\\components\\TempThreeDays.jsx",[],[],"C:\\Users\\guill\\Desktop\\wild\\2023-02-js-btz-spotcast\\src\\components\\widgets\\login\\Login.jsx",[],[],"C:\\Users\\guill\\Desktop\\wild\\2023-02-js-btz-spotcast\\src\\components\\widgets\\login\\Register.jsx",["121"],[],"C:\\Users\\guill\\Desktop\\wild\\2023-02-js-btz-spotcast\\src\\components\\utilities\\UsersDataBase.jsx",[],[],{"ruleId":"122","severity":1,"message":"123","line":32,"column":6,"nodeType":"124","endLine":32,"endColumn":23,"suggestions":"125"},{"ruleId":"126","severity":1,"message":"127","line":19,"column":13,"nodeType":"128","endLine":19,"endColumn":66},{"ruleId":"129","severity":1,"message":"130","line":44,"column":21,"nodeType":"131","messageId":"132","endLine":44,"endColumn":23},{"ruleId":"126","severity":1,"message":"127","line":74,"column":11,"nodeType":"128","endLine":74,"endColumn":87},{"ruleId":"133","severity":1,"message":"134","line":86,"column":15,"nodeType":"128","messageId":"135","endLine":86,"endColumn":65,"fix":"136"},{"ruleId":"122","severity":1,"message":"137","line":86,"column":6,"nodeType":"124","endLine":86,"endColumn":17,"suggestions":"138"},{"ruleId":"139","severity":1,"message":"140","line":1,"column":17,"nodeType":"141","messageId":"142","endLine":1,"endColumn":26},{"ruleId":"139","severity":1,"message":"143","line":34,"column":13,"nodeType":"141","messageId":"142","endLine":34,"endColumn":29},{"ruleId":"139","severity":1,"message":"144","line":38,"column":13,"nodeType":"141","messageId":"142","endLine":38,"endColumn":25},{"ruleId":"139","severity":1,"message":"145","line":39,"column":13,"nodeType":"141","messageId":"142","endLine":39,"endColumn":30},{"ruleId":"139","severity":1,"message":"146","line":43,"column":13,"nodeType":"141","messageId":"142","endLine":43,"endColumn":21},{"ruleId":"139","severity":1,"message":"147","line":44,"column":13,"nodeType":"141","messageId":"142","endLine":44,"endColumn":26},{"ruleId":"139","severity":1,"message":"148","line":8,"column":8,"nodeType":"141","messageId":"142","endLine":8,"endColumn":12},{"ruleId":"139","severity":1,"message":"149","line":17,"column":23,"nodeType":"141","messageId":"142","endLine":17,"endColumn":37},{"ruleId":"122","severity":1,"message":"150","line":47,"column":8,"nodeType":"124","endLine":47,"endColumn":21,"suggestions":"151"},{"ruleId":"139","severity":1,"message":"148","line":6,"column":8,"nodeType":"141","messageId":"142","endLine":6,"endColumn":12},{"ruleId":"122","severity":1,"message":"152","line":35,"column":8,"nodeType":"124","endLine":35,"endColumn":23,"suggestions":"153"},{"ruleId":"126","severity":1,"message":"127","line":44,"column":13,"nodeType":"128","endLine":44,"endColumn":34},{"ruleId":"139","severity":1,"message":"154","line":7,"column":16,"nodeType":"141","messageId":"142","endLine":7,"endColumn":23},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'timeStampIndex' and 'winddirection_10m'. Either include them or remove the dependency array.","ArrayExpression",["155"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"156","text":"157"},"React Hook useEffect has a missing dependency: 'timeStamp'. Either include it or remove the dependency array.",["158"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'currentTideIndex' is assigned a value but never used.","'previousTide' is assigned a value but never used.","'previousTideIndex' is assigned a value but never used.","'nextTide' is assigned a value but never used.","'nextTideIndex' is assigned a value but never used.","'vent' is defined but never used.","'setweatherCode' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'weatherCode'. Either include it or remove the dependency array.",["159"],"React Hook useEffect has a missing dependency: 'meteoIcon'. Either include it or remove the dependency array.",["160"],"'setName' is assigned a value but never used.",{"desc":"161","fix":"162"},[3256,3256]," rel=\"noreferrer\"",{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},"Update the dependencies array to be: [onLoadOpenMeteo, timeStampIndex, winddirection_10m]",{"range":"169","text":"170"},"Update the dependencies array to be: [timeStamp, wind.time]",{"range":"171","text":"172"},"Update the dependencies array to be: [onLoadMeteo, weatherCode]",{"range":"173","text":"174"},"Update the dependencies array to be: [meteoIcon, onLoadMeteo3D]",{"range":"175","text":"176"},[1423,1440],"[onLoadOpenMeteo, timeStampIndex, winddirection_10m]",[2852,2863],"[timeStamp, wind.time]",[1959,1972],"[onLoadMeteo, weatherCode]",[1337,1352],"[meteoIcon, onLoadMeteo3D]"]